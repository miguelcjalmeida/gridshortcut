######################################################
################## PORTRAIT TYPES ####################
######################################################

types PortraitTypes
{

    ####################################
    ######### MAIN PORTRAITS ###########
    ####################################

    # The standard portrait types. CoA, opinion and status icons are included by default; use blockovveride to disable them.

    ## Extra small head portrait. These are smaller than we would like, so only use if you really, really have to.
    type portrait_head_small = widget {
        size = { 85 90 }

        background = {
            using = Background_Area_Solid

            modify_texture = {
                texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
                blend_mode = alphamultiply
                alpha = 0.2
            }
        }

        background = {
            block "empty_character" {}
            texture = "gfx/portraits/portrait_frame.dds"
            using = Color_Grey
            margin = { -4 -4 }
            alpha = 0.4
        }

        widget = {
            size = { 100% 100% }
            using = Portrait_Background_Glows

            block "empty_character" {}
        }

        portrait_button = {
            parentanchor = bottom|hcenter
            size = { 80 100 }
            using = portrait_base
            block "portrait_texture"
            {
                portrait_texture = "[Character.GetPortrait('environment_head', 'camera_head', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
            }
            mask = "gfx/portraits/portrait_mask_head.dds"
            effectname = "NoHighlight"

            highlight_icon = {
                name = "prison_bars"
                visible = "[Character.IsImprisoned]"
                size = { 80 88 }
                parentanchor = bottom
                effectname = "NoHighlight"
                texture = "gfx/portraits/portrait_prison_head.dds"

                modify_texture = {
                    name = "mask"
                    texture = "gfx/portraits/portrait_mask_head.dds"
                    spriteType = Corneredstretched
                    blend_mode = alphamultiply
                }
            }

            block "portrait_button" {}
        }

        widget = {
            size = { 100% 100% }

            background = {
                texture = "gfx/portraits/portrait_rank.dds"
                margin = { -4 -4 }
                framesize = { 95 94 }
                frame = "[Character.GetPrimaryTitle.GetTierFrame]"
            }
        }

        block "coa" {
            coa_realm_tiny = {
                visible = "[Character.HasLandedTitles]"
                parentanchor = bottom|left
                position = { 3 -2 }
                scale = 0.85
            }
        }

        widget = {
            size = { 100% 100% }
            block "empty_character" {}

            background = {
                texture = "gfx/portraits/portrait_frame.dds"
                using = Color_Grey
                margin = { -4 -4 }
                alpha = 0.4

                modify_texture = {
                    texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
                    blend_mode = alphamultiply
                }
            }

            background = {
                visible = "[Character.IsHovered]"
                texture = "gfx/portraits/portrait_frame.dds"
                using = Color_Grey
                alpha = 0.7
                margin = { -4 -4 }
            }
        }

        flowcontainer = {
            parentanchor = bottom|right
            ignoreinvisible = yes
            direction = vertical
            margin = { 4 2 }
            spacing = 2

            portrait_status_icons_small = {
                parentanchor = right
            }

            portrait_opinion_small = { name = "tutorial_highlight_character_view_opinion_heir" }
        }


        # Portrait unknown glow
        highlight_icon = {
            name = "portrait_unknown_head_small_glow"
            parentanchor = center
            position = { 3 -9 }
            gfxtype = framedbuttongfx
            effectname = "NoHighlight"
            texture = "gfx/portraits/unknown_portraits/button_unknown_head.dds"
            size = { 80 100 }
            framesize = { 384 480 }
            upframe = 1
            overframe = 2
            block "glow_visible" {

                visible = "[Not(Character.IsValid)]"
            }

            block "glow_flip" {}

            block "onclick" {}
        }
    }

    # Cached version
    type portrait_head_small_cached = portrait_head_small {
        blockoverride "portrait_texture" {
            portrait_texture = "[Character.GetCachedPortrait('environment_head', 'camera_head', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
        }
    }

    ## Standard head portrait
    type portrait_head = widget {
        size = { 110 120 }

        background = {
            using = Background_Area_Solid
        }

        portrait_button = {
            parentanchor = bottom|hcenter
            size = { 100 125 }
            using = portrait_base

            block "portrait_texture" {
                portrait_texture = "[Character.GetPortrait('environment_head', 'camera_head', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
            }

            mask = "gfx/portraits/portrait_mask_head.dds"
            effectname = "NoHighlight"

            highlight_icon = {
                name = "prison_bars"
                visible = "[Character.IsImprisoned]"
                size = { 100 118 }
                parentanchor = bottom
                effectname = "NoHighlight"
                texture = "gfx/portraits/portrait_prison_head.dds"

                modify_texture = {
                    name = "mask"
                    texture = "gfx/portraits/portrait_mask_head.dds"
                    spriteType = Corneredstretched
                    blend_mode = alphamultiply
                }
            }

            block "portrait_button" {}
        }

        widget = {
            size = { 100% 100% }

            background = {
                texture = "gfx/portraits/portrait_rank.dds"
                margin = { -4 -4 }
                framesize = { 95 94 }
                frame = "[Character.GetPrimaryTitle.GetTierFrame]"
            }
        }

        portrait_status_icons_small = {
            parentanchor = bottom|right
            position = { -7 -8 }
        }

        block "coa" {
            coa_realm_tiny = {
                visible = "[Character.HasLandedTitles]"
                parentanchor = bottom|left
                position = { 3 -2 }
            }
        }

        portrait_opinion = {
            parentanchor = bottom|hcenter
            position = { 1 -4 }
        }

        widget = {
            size = { 100% 100%}

            background = {
                texture = "gfx/portraits/portrait_frame.dds"
                using = Color_Grey
                margin = { -4 -4 }
                alpha = 0.5
            }

            background = {
                visible = "[Character.IsHovered]"
                texture = "gfx/portraits/portrait_frame.dds"
                using = Color_Grey
                alpha = 0.7
                margin = { -4 -4 }
            }
        }


        #portrait unknown glow
        button = {
            name = "portrait_unknown_head_glow"
            parentanchor = center
            position = { 3 -7 }
            gfxtype = framedbuttongfx
            effectname = "NoHighlight"
            texture = "gfx/portraits/unknown_portraits/button_unknown_head.dds"
            size = { 98 125 }
            framesize = { 384 480 }
            upframe = 1
            overframe = 2

            block "glow_visible" {
                visible = "[Not(Character.IsValid)]"
            }

            block "glow_flip" {}

            block "onclick" {}

        }
    }

    # Cached version
    type portrait_head_cached = portrait_head {
        blockoverride "portrait_texture" {
            portrait_texture = "[Character.GetCachedPortrait('environment_head', 'camera_head', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
        }
    }

    ## Standard portrait from shoulders up
    type portrait_shoulders = widget {
        size = { 125 160 }

        using = Portrait_Background_Glows

        portrait_button = {
            parentanchor = bottom|hcenter
            size = { 145 175 }
            using = portrait_base
            block "portrait_texture"
            {
                portrait_texture = "[Character.GetPortrait('environment_shoulders', 'camera_shoulders', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
            }

            mask = "gfx/portraits/portrait_mask_shoulders.dds"
            effectname = "NoHighlight"

            highlight_icon = {
                name = "prison_bars"
                visible = "[Character.IsImprisoned]"
                size = { 100% 100% }
                effectname = "NoHighlight"
                texture = "gfx/portraits/portrait_prison_shoulders.dds"

                modify_texture = {
                    name = "mask"
                    texture = "gfx/portraits/portrait_mask_shoulders.dds"
                    spriteType = Corneredstretched
                    blend_mode = alphamultiply
                }
            }

            block "portrait_button" {}
        }

        portrait_status_icons = {
            parentanchor = bottom|right
            position = { 0 -3 }
            scale = 0.85

            background = {
                using = Background_Area_Dark
                margin = { 2 3 }
                alpha = 0.8
            }
        }

        block "coa" {
            coa_realm_small_crown = {
                visible = "[Character.HasLandedTitles]"
                parentanchor = bottom|left
                position = { -5 3 }
            }
        }

        portrait_opinion = {
            parentanchor = bottom|hcenter
            position = { 0 -2 }
        }

        #portrait unknown glow
        button = {
            position = { -8 -14 }
            size = { 141 174 }
            texture = "gfx/portraits/unknown_portraits/button_unknown_shoulders.dds"
            framesize = { 471 589 }
            gfxtype = framedbuttongfx
            effectname = "NoHighlight"
            upframe = 1
            overframe = 2

            block "glow_visible" {

                visible = "[Not(Character.IsValid)]"

            }

            block "glow_flip" {}

            block "onclick" {}
        }
    }

    # Cached version
    type portrait_shoulders_cached = portrait_shoulders {
        blockoverride "portrait_texture"
        {
            portrait_texture = "[Character.GetCachedPortrait('environment_shoulders', 'camera_shoulders', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
        }
    }

    ## Standard torso from waist up
    type portrait_torso = widget {
        size = { 165 200 }

        using = Portrait_Background_Glows

        portrait_button = {
            parentanchor = bottom|hcenter
            size = { 195 225 }
            using = portrait_base

            portrait_texture = "[Character.GetPortrait('environment_torso', 'camera_torso', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
            mask = "gfx/portraits/portrait_mask_torso.dds"
            effectname = "NoHighlight"

            highlight_icon = {
                name = "prison_bars"
                visible = "[Character.IsImprisoned]"
                size = { 100% 100% }
                effectname = "NoHighlight"
                texture = "gfx/portraits/portrait_prison_torso.dds"

                modify_texture = {
                    name = "mask"
                    texture = "gfx/portraits/portrait_mask_torso.dds"
                    spriteType = Corneredstretched
                    blend_mode = alphamultiply
                }
            }

            block "portrait_button" {}
        }

        portrait_status_icons = {
            parentanchor = bottom|left
            position = { 43 -6 }
            scale = 0.85

            background = {
                using = Background_Area_Dark
                margin = { 2 3 }
                alpha = 0.8
            }
        }

        block "coa" {
            coa_realm_small_crown = {
                visible = "[Character.HasLandedTitles]"
                parentanchor = bottom|left
                position = { -2 1 }
            }
        }

        portrait_opinion = {
            parentanchor = bottom|hcenter
            position = { 4 -2 }
        }

        #portrait unknown glow
        button = {
            name = "portrait_unknown_torso_glow"
            parentanchor = center
            position = { 0 -12 }
            gfxtype = framedbuttongfx
            effectname = "NoHighlight"
            texture = "gfx/portraits/unknown_portraits/button_unknown.dds"
            size = { 195 225 }
            framesize = { 554 780 }
            upframe = 1
            overframe = 2

            block "glow_visible" {

                visible = "[Not(Character.IsValid)]"

            }

            block "glow_flip" {}

            block "onclick" {}
        }
    }

    ## Standard full body portrait
    type portrait_body = widget {
        size = { 210 300 }

        using = Portrait_Background_Glows

        portrait_button = {
            parentanchor = bottom|hcenter
            size = { 240 330 }
            using = portrait_base

            block "portrait_texture" {
                portrait_texture = "[Character.GetPortrait('environment_body', 'camera_body', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
            }
            block "mask" {
                mask = "gfx/portraits/portrait_mask_body.dds"
            }
            effectname = "NoHighlight"

            block "prison" {
                highlight_icon = {
                    name = "prison_bars"
                    visible = "[Character.IsImprisoned]"
                    size = { 100% 100% }
                    effectname = "NoHighlight"
                    texture = "gfx/portraits/portrait_prison_body.dds"

                    modify_texture = {
                        name = "mask"
                        texture = "gfx/portraits/portrait_mask_body.dds"
                        spriteType = Corneredstretched
                        blend_mode = alphamultiply
                    }
                }
            }

            block "portrait_button" {}
        }

        portrait_status_icons = {
            parentanchor = bottom|left
            position = { 60 -5 }
            scale = 0.85

            background = {
                using = Background_Area_Dark
                margin = { 3 3 }
                alpha = 0.8
            }
        }

        block "coa" {
            coa_realm_medium_crown = {
                visible = "[Character.HasLandedTitles]"
                parentanchor = bottom|left
                position = { -2 4 }
            }
        }

        portrait_opinion = {
            parentanchor = bottom|hcenter
            position = { 0 -2 }
        }

        #portrait unknown glow
        button = {
            name = "portrait_unknown_body_glow"
            parentanchor = center
            position = { 0 -15 }
            gfxtype = framedbuttongfx
            effectname = "NoHighlight"
            texture = "gfx/portraits/unknown_portraits/button_unknown_small.dds"
            size = { 240 330 }
            framesize = { 564 780 }
            upframe = 1
            overframe = 2

            block "glow_visible" {

                visible = "[Not(Character.IsValid)]"

            }

            block "glow_flip" {}

            block "onclick" {}

        }
    }

    ## Standard full body portrait
    type portrait_body_cached = widget {
        size = { 210 300 }

        using = Portrait_Background_Glows

        portrait_button = {
            parentanchor = bottom|hcenter
            size = { 240 330 }
            using = portrait_base

            block "portrait_texture" {
                portrait_texture = "[Character.GetCachedPortrait('environment_body', 'camera_body', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
            }
            block "mask" {
                mask = "gfx/portraits/portrait_mask_body.dds"
            }
            effectname = "NoHighlight"

            highlight_icon = {
                name = "prison_bars"
                visible = "[Character.IsImprisoned]"
                size = { 100% 100% }
                effectname = "NoHighlight"
                texture = "gfx/portraits/portrait_prison_torso.dds"

                modify_texture = {
                    name = "mask"
                    texture = "gfx/portraits/portrait_mask_torso.dds"
                    spriteType = Corneredstretched
                    blend_mode = alphamultiply
                }
            }

            block "portrait_button" {}
        }

        portrait_status_icons = {
            parentanchor = bottom|left
            position = { 60 -5 }
            scale = 0.85

            background = {
                using = Background_Area_Dark
                margin = { 3 3 }
                alpha = 0.8
            }
        }

        block "coa" {
            coa_realm_medium_crown = {
                visible = "[Character.HasLandedTitles]"
                parentanchor = bottom|left
                position = { -2 4 }
            }
        }

        portrait_opinion = {
            parentanchor = bottom|hcenter
            position = { 0 -2 }
        }
    }

    ####################################
    ######## SPECIAL PORTRAITS #########
    ####################################

    type portrait_map = widget {
        size = { 85 90 }

        portrait_button = {
            visible = "[Not(Character.IsImprisoned)]"
            parentanchor = bottom|hcenter
            size = { 80 100 }
            using = portrait_base
            portrait_texture = "[Character.GetPortrait('environment_head', 'camera_head', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
            mask = "gfx/portraits/portrait_mask_head.dds"
            effectname = "NoHighlight"

            block "portrait_button" {}
        }
    }

    type portrait_character_view_main = margin_widget {
        size = { 240 300 }
        margin = { 3 3 }

        using = Portrait_Background_Glows

        blockoverride "glow_local_player" {}
        blockoverride "glow_selected" {}
        blockoverride "grayscale" {}

        portrait_button = {
            size = { 350 421 }
            position = { 0 10 }
            parentanchor = bottom|hcenter
            using = portrait_base

            portrait_texture = "[Character.GetAnimatedPortrait(Illustration.GetEnvironment(Character.Self), 'camera_character_view_main', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
            mask = "gfx/portraits/portrait_mask_character_view.dds"
            effectname = "NoHighlight"
            # tooltip_enabled = no


            highlight_icon = {
                name = "prison_bars"
                visible = "[Character.IsImprisoned]"
                size = { 100% 100% }
                position = { 0 20 }

                effectname = "NoHighlight"
                texture = "gfx/portraits/portrait_prison_character_view.dds"
                modify_texture = {
                    name = "mask"
                    texture = "gfx/portraits/portrait_mask_character_view.dds"
                    spriteType = Corneredstretched
                    blend_mode = alphamultiply
                }
            }

            block "portrait_button" {}
        }

        portrait_status_icons = {
            parentanchor = bottom|right
            position = { -10 0 }

            block "portrait_status_icons" {}
        }

        portrait_opinion = {
            position = { 0 -5 }
            parentanchor = bottom|hcenter

            block "portrait_opinion" {}
        }
    }

    type portrait_character_view_spouse = margin_widget {
        size = { 240 300 }
        margin = { 3 3 }

        using = Portrait_Background_Glows

        portrait_button = {
            size = { 350 338 }
            position = { 0 10 }
            parentanchor = bottom|hcenter
            using = portrait_base

            portrait_texture = "[Character.GetAnimatedPortrait(Illustration.GetEnvironment( Character.Self ), 'camera_character_view_spouse', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
            mask = "gfx/portraits/portrait_mask_character_view.dds"
            effectname = "NoHighlight"

            highlight_icon = {
                name = "prison_bars"
                visible = "[Character.IsImprisoned]"
                size = { 100% 100% }
                position = { 0 20 }

                effectname = "NoHighlight"
                texture = "gfx/portraits/portrait_prison_character_view.dds"

                modify_texture = {
                    name = "mask"
                    texture = "gfx/portraits/portrait_mask_character_view.dds"
                    spriteType = Corneredstretched
                    blend_mode = alphamultiply
                }
            }

            block "portrait_button" {}
            # blockoverride "grayscale" {}
        }

        flowcontainer = {
            parentanchor = bottom|right
            widgetanchor = bottom|left
            position = { -60 0 }
            ignoreinvisible = yes
            margin_top = 5

            coa_realm_small = {
                visible = "[Character.HasLandedTitles]"

                using = Animation_ShowHide_Standard
            }

            portrait_status_icons = {
                parentanchor = bottom
            }
        }

        portrait_opinion = {
            position = { 0 -25 }
            parentanchor = bottom|hcenter

            block "portrait_opinion" {}
        }
    }

    type portrait_event = portrait_button {
        using = portrait_base

        size = { 100 100 }
        portrait_texture = "[Character.GetAnimatedPortrait('environment_event_standard', 'environment_event_standard', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
        background_texture = "gfx/portraits/portrait_transparent.dds"
        texture = "gfx/portraits/portrait_transparent.dds"
        mask = "gfx/portraits/portrait_mask_event.dds"
    }

    type portrait_council = widget {
        size = { 260 285 }

        portrait_button = {
            size = { 260 285 }
            parentanchor = bottom|hcenter
            using = portrait_base

            portrait_texture = "[Character.GetAnimatedPortrait('environment_council', 'camera_council', CouncilPositionType.GetPortraitAnimation, PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
            mask = "gfx/portraits/portrait_mask_council.dds"
            effectname = "NoHighlight"

            block "mask" {
                mask = "gfx/portraits/portrait_mask_council.dds"
            }
        }

        #portrait unknown glow
        button = {
            name = "portrait_unknown_council_glow"
            visible = "[Not(Character.IsValid)]"
            parentanchor = center
            position = { 2 -37 }
            gfxtype = framedbuttongfx
            effectname = "NoHighlight"
            texture = "gfx/portraits/unknown_portraits/button_unknown_small.dds"
            size = { 239 312 }
            framesize = { 564 780 }
            upframe = 1
            overframe = 2

            block "glow_visible" {

                visible = "[Not(Character.IsValid)]"

            }

            block "onclick" {}
        }
    }

    type portrait_event_small = portrait_shoulders {

        background = {
            block "highlight_visible" {}
            using = Background_Portrait_Glow
            color = { 0.9 0.8 0.6 0.6 }
        }
    }

    type portrait_war_overview = margin_widget {
        size = { 240 300 }
        allow_outside = yes

        margin = { 3 3 }
       
        widget = {
            using = Portrait_Background_Glows
            size = { 320 380 }

            alwaystransparent = yes
            parentanchor = bottom|hcenter
        }


        portrait_button = {
            size = { 420 632 }
            parentanchor = bottom|hcenter
            using = portrait_base

            portrait_texture = "[Character.GetAnimatedPortrait('environment_war_overview', 'camera_war_overview', Select_CString(WarParticipantItem.IsAttacker, 'war_attacker', 'war_defender'), PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
            mask = "gfx/portraits/portrait_mask_torso.dds"
            effectname = "NoHighlight"

            block "portrait_button" {}

            block "portrait_transformation"
            {
                portrait_scale = { 1 1 }
            }

            highlight_icon = {
                name = "prison_bars"
                visible = "[Character.IsImprisoned]"
                size = { 100% 100% }
                position = { 0 80 }

                effectname = "NoHighlight"
                texture = "gfx/portraits/portrait_prison_body.dds"

                modify_texture = {
                    name = "mask"
                    texture = "gfx/portraits/portrait_mask_character_view.dds"
                    spriteType = Corneredstretched
                    blend_mode = alphamultiply
                }
            }
        }
    }

    ### Bottom left HUD portrait
    type portrait_hud = portrait_button {
        name = "tutorial_highlight_bottom_left_portrait_button"
        visible = "[Not(GetVariableSystem.Exists( 'lifestyle_open' ))]"
        size = { 280 280 }

        gfxtype = portraitbuttongfx
        shaderfile = "gfx/FX/jomini/gui_portrait.shader"
        effectname = "NoHighlight"

        state = {
            name = _mouse_enter
            on_start = "[Character.OnMouseEnter]"
            scale = 1.05
            using = Animation_Curve_Default
            duration = 0.05
        }

        state = {
            name = _mouse_leave
            on_start = "[Character.OnMouseLeave]"
            using = Animation_Curve_Default
            duration = 0.05
            scale = 1
        }

        state = {
            name = _mouse_release
            start_sound = {
                soundeffect = "event:/SFX/UI/Character/sfx_ui_character_portrait_select"
            }
        }

        onclick = "[DefaultOnCharacterClick(Character.GetID)]"
        onrightclick = "[DefaultOnCharacterRightClick(Character.GetID)]"
        button_ignore = none

        button = { 
            size = { 0 0 }
            onclick = "[DefaultOnCharacterRightClick(Character.GetID)]"
            block "portrait_options_button" { }
        }

        clicksound = "event:/SFX/UI/Character/sfx_ui_character_portrait_select"
        oversound = "event:/SFX/UI/Character/sfx_ui_character_portrait_pointer_over"

        portrait_texture = "[Character.GetAnimatedPortrait('environment_hud', 'camera_shoulders', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
        background_texture = "gfx/portraits/portrait_transparent.dds"
        texture = "gfx/portraits/portrait_transparent.dds"
        mask = "gfx/portraits/portrait_mask_blank.dds"

        highlight_icon = {
            name = "prison_bars"
            visible = "[Character.IsImprisoned]"
            size = { 100% 100% }
            effectname = "NoHighlight"
            texture = "gfx/portraits/portrait_prison_shoulders.dds"
            position = { 25 0 }

            modify_texture = {
                name = "mask"
                texture = "gfx/portraits/portrait_mask_head.dds"
                spriteType = Corneredstretched
                blend_mode = alphamultiply
                rotate_uv = 180
            }
        }

        using = tooltip_es
        # tooltip_enabled = "[Not(IsInteractionMenuOpenForCharacter(Character.GetID))]"
        tooltip_enabled = no

        tooltipwidget = {
            cooltip_type = {
                blockoverride "interaction_info"
                {
                    text = "CHARACTER_TOOLTIP_INSTRUCTION"
                }
            }
        }

        tooltip_offset = { -10 0 }
        tooltip_verticalbehavior = slide
        tooltip_horizontalbehavior = mirror
    }

    ### Lifestyles portrait
    type portrait_lifestyles = portrait_button {
        size = { 500 1000 }
        alwaystransparent = "[Not(Lifestyle.IsValid)]"
        effectname = "NoHighlight"
        tooltip_enabled = no

        using = portrait_base

        onclick = "[DefaultOnCharacterClick(Character.GetID)]"

        portrait_texture = "[Character.GetAnimatedPortrait('environment_body', 'camera_lifestyles', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
        mask = "gfx/portraits/portrait_mask_blank.dds"

        state ={
            name = _show
            using = Animation_Curve_Default

            duration = 0.15
            alpha = 1
        }

        state = {
            name = _hide
            using = Animation_Curve_Default

            duration = 0.15
            alpha = 0
        }

        background = {
            name = "hovered"
            visible = "[Character.IsHovered]"
            using = Background_Portrait_Glow
            color = { 0.9 0.8 0.6 0.6 }
        }
    }

    ####################################
    ########### ACCESSORIES ############
    ####################################

    ## Opinion box for portraits
    type portrait_opinion = flowcontainer {
        name = "tutorial_highlight_portrait_opinion"
        visible = "[And(Character.IsValid, And(Character.IsAlive, Not(Character.IsLocalPlayer)))]"
        ignoreinvisible = yes

        background = {
            name = "portrait_opinion_bg"
            texture = "gfx/interface/component_tiles/solid_black_label.dds"
            spritetype = Corneredtiled
            spriteborder = { 20 20 }
            margin = { 3 1 }
        }

        block "opinion_box" {
            icon = {
                block "dread_logic" {
                    visible = "[Character.ShouldShowDreadEffectIcon]"
                    frame = "[Character.GetPlayerDreadEffectIconFrame]"
                    tooltip = "[Character.GetPlayerDreadEffectTooltip]"
                }
                name = "dread"
                size = { 20 20 }
                texture = "gfx/interface/icons/portraits/dread_values.dds"
                framesize = { 40 40 }
            }

            text_single = {
                name = "tutorial_highlight_character_view_opinion"
                visible = "[Character.IsValid]"
                max_width = 45
                align = nobaseline
                margin = { 3 0 }
                tooltipwidget = character_opinion_tooltip
                default_format = "#true_white"

                block "opinion_text" {
                    text = "[Character.GetOpinionOf( GetPlayer )|=]"
                    fonttintcolor = "[Character.GetOpinionOfTint( GetPlayer )]"
                }
            }
        }
    }

    type portrait_opinion_small = flowcontainer {
        #name = "tutorial_highlight_portrait_opinion"
        visible = "[And(Character.IsValid, And(Character.IsAlive, Not(Character.IsLocalPlayer)))]"
        ignoreinvisible = yes

        background = {
            name = "portrait_opinion_bg"
            texture = "gfx/interface/component_tiles/solid_black_label.dds"
            spritetype = Corneredtiled
            spriteborder = { 20 20 }
            margin = { 2 1 }
        }

        block "opinion_box" {
            icon = {
                name = "dread"
                visible = "[Character.ShouldShowDreadEffectIcon]"
                size = { 16 16 }
                texture = "gfx/interface/icons/portraits/dread_values.dds"
                framesize = { 40 40 }
                frame = "[Character.GetPlayerDreadEffectIconFrame]"
                tooltip = "[Character.GetPlayerDreadEffectTooltip]"
            }

            text_single = {
                visible = "[Character.IsValid]"
                max_width = 45
                align = nobaseline
                fontsize = 13
                margin = { 3 0 }

                tooltipwidget = character_opinion_tooltip
                using = tooltip_se
                default_format = "#true_white"

                block "opinion_text" {
                    text = "[Character.GetOpinionOf( GetPlayer )|=]"
                    fonttintcolor = "[Character.GetOpinionOfTint( GetPlayer )]"
                }
            }
        }
    }

    ## Status icons, shown in the bottom right on portraits
    type portrait_status_icons_small = flowcontainer {
        visible = "[Character.IsValid]"
        ignoreinvisible = yes
        direction = vertical

        background = {
            using = Background_Area_Dark
            margin = { 2 2 }
            margin_right = 1
        }

        block "status_icons" {
            icon = {
                name = "playable_icon"
                visible = "[ObjectsEqual( Character.Self, GetPlayer.GetPlayerHeir )]"
                size = { 14 14 }
                texture = "gfx/interface/icons/portraits/heir_small.dds"
                tooltip = "[Character.GetPlayableFrameTooltip]"
            }

            icon = {
                name = "head_icon"
                visible = "[LessThan_int32(Character.GetDynastyHeadRelationFrame('(bool)yes'), '(int32)9')]"
                size = { 14 14 }

                texture = "gfx/interface/icons/portraits/relation_small.dds"
                framesize = { 28 28 }
                frame = "[Character.GetDynastyHeadRelationFrame('(bool)yes')]"
                tooltip = "[Character.GetDynastyHeadRelationTooltip]"
            }

            icon = {
                name = "relation_icon"
                visible = "[LessThan_int32(Character.GetPlayerDynastyRelationFrame, '(int32)9')]"
                size = { 14 14 }

                texture = "gfx/interface/icons/portraits/relation_small.dds"
                framesize = { 28 28 }
                frame = "[Character.GetPlayerDynastyRelationFrame]"
                tooltip = "[Character.GetPlayerDynastyRelationTooltip]"
            }

            icon = {
                name = "powerful_vassal"
                visible = "[Character.IsMyPowerfulVassal]"
                size = { 14 14 }

                texture = "gfx/interface/icons/portraits/powerful_vassal_small.dds"
                framesize = { 28 28 }
                frame = "[Character.GetPowerfulVassalFrame]"
                tooltip = "[Character.GetPowerfulVassalTooltip]"
            }

            icon = {
                name = "can_be_punished"
                visible = "[Character.CanBePunished]"
                size = { 14 14 }

                texture = "gfx/interface/icons/portraits/punishment_small.dds"
                tooltip = "[Character.PunishmentTooltip]"
            }

            icon = {
                name = "hook"
                visible = "[Character.PlayerHasHooksOrHookableSecrets]"
                size = { 14 14 }

                texture = "gfx/interface/icons/portraits/hook_secret_small.dds"
                framesize = { 28 28 }
                frame = "[Character.GetHookOrHookableSecretsFrame]"
                tooltip = "[Character.HookTooltip]"
            }

            icon = {
                name = "incapable"
                visible = "[Character.IsIncapable]"
                size = { 14 14 }
                texture = "gfx/interface/icons/portraits/incapable_small.dds"
                tooltip = "trait_incapable"
            }

            # icon = {
            #     name = "dread"
            #  #   visible = "[Character.ShouldShowDreadEffectIcon]"
            #     parentanchor = right
            #     size = { 20 20 }

            #     texture = "gfx/interface/icons/icon_dread_values.dds"
            #     framesize = { 20 20 }
            #     frame = "[Character.GetPlayerDreadEffectIconFrame]"

            #     tooltip = "[Character.GetPlayerDreadEffectTooltip]"
            # }
        }

        block "extra_status_icons" {}

        block "dead_icon"
        {
            icon = {
                name = "is_dead"
                visible = "[Character.IsDeadAndValid]"
                parentanchor = right
                size = { 14 14 }

                texture = "[Character.GetDeathReasonIcon]"
                tooltip = "CHARACTER_DEAD_TOOLTIP"
            }
        }
    }

    type portrait_status_icons = flowcontainer {
        ignoreinvisible = yes
        direction = vertical
        visible = "[Character.IsValid]"

        block "status_icons" {
            icon = {
                name = "playable_icon"
                visible = "[ObjectsEqual( Character.Self, GetPlayer.GetPlayerHeir )]"
                size = { 20 20 }
                texture = "gfx/interface/icons/portraits/heir.dds"
                tooltip = "[Character.GetPlayableFrameTooltip]"
            }

            icon = {
                name = "head_icon"
                visible = "[LessThan_int32(Character.GetDynastyHeadRelationFrame('(bool)yes'), '(int32)9')]"
                size = { 20 20 }

                texture = "gfx/interface/icons/portraits/relation.dds"
                framesize = { 40 40 }
                frame = "[Character.GetDynastyHeadRelationFrame('(bool)yes')]"
                tooltip = "[Character.GetDynastyHeadRelationTooltip]"
            }

            icon = {
                name = "relation_icon"
                visible = "[LessThan_int32(Character.GetPlayerDynastyRelationFrame, '(int32)9')]"
                size = { 20 20 }

                texture = "gfx/interface/icons/portraits/relation.dds"
                framesize = { 40 40 }
                frame = "[Character.GetPlayerDynastyRelationFrame]"
                tooltip = "[Character.GetPlayerDynastyRelationTooltip]"
            }

            icon = {
                name = "powerful_vassal"
                visible = "[Character.IsMyPowerfulVassal]"
                size = { 20 20 }

                texture = "gfx/interface/icons/portraits/powerful_vassal.dds"
                framesize = { 40 40 }
                frame = "[Character.GetPowerfulVassalFrame]"
                tooltip = "[Character.GetPowerfulVassalTooltip]"
            }

            icon = {
                name = "can_be_punished"
                visible = "[Character.CanBePunished]"
                size = { 20 20 }

                texture = "gfx/interface/icons/portraits/punishment.dds"
                tooltip = "[Character.PunishmentTooltip]"
            }

            icon = {
                name = "hook"
                visible = "[Character.PlayerHasHooksOrHookableSecrets]"
                size = { 20 20 }

                texture = "gfx/interface/icons/portraits/hook_secret.dds"
                framesize = { 40 40 }
                frame = "[Character.GetHookOrHookableSecretsFrame]"
                tooltip = "[Character.HookTooltip]"
            }

            icon = {
                name = "incapable"
                visible = "[Character.IsIncapable]"
                size = { 20 20 }
                texture = "gfx/interface/icons/portraits/incapable.dds"
                tooltip = "CHARACTER_INCAPABLE_TOOLTIP"
            }
        }

        block "dead_icon"
        {
            icon = {
                name = "is_dead"
                visible = "[Character.IsDeadAndValid]"
                parentanchor = right
                size = { 20 20 }

                texture = "[Character.GetDeathReasonIcon]"
                tooltip = "CHARACTER_DEAD_TOOLTIP"
            }
        }
    }
}

######################################################
##################### TEMPLATES ######################
######################################################

## BASE TEMPLATE

template portrait_base
{
    pop_out = no
    block "grayscale" {
        grayscale = "[Not(Character.IsAlive)]"
    }

    gfxtype = portraitbuttongfx
    shaderfile = "gfx/FX/jomini/gui_portrait.shader"

    intersectionmask = no

    background_texture = "gfx/portraits/portrait_transparent.dds"
    texture = "gfx/portraits/portrait_transparent.dds"

    clicksound = "event:/SFX/UI/Character/sfx_ui_character_portrait_select"
    oversound = "event:/SFX/UI/Character/sfx_ui_character_portrait_pointer_over"

    block "portrait_button_template_onmouseenter"
    {
        state = {
            name = _mouse_enter
            on_start = "[Character.OnMouseEnter]"
        }
    }
    block "portrait_button_template_onmouseleave"
    {
        state = {
            name = _mouse_leave
            on_start = "[Character.OnMouseLeave]"
        }
    }

    block "portrait_button_template_onclick"
    {
        onclick = "[DefaultOnCharacterClick(Character.GetID)]"
    }

    block "portrait_button_template_onrightclick"
    {
        onrightclick = "[DefaultOnCharacterRightClick(Character.GetID)]"
        button_ignore = none
    }
    
    button = { 
        size = { 0 0 }
        onclick = "[DefaultOnCharacterRightClick(Character.GetID)]"
        block "portrait_options_button" { }
    }

    filter_mouse = right

    block "portrait_button_template_tooltip"
    {
        tooltip_enabled = "[Not(IsInteractionMenuOpenForCharacter(Character.GetID))]"

        tooltipwidget = {
            cooltip_type = {
                blockoverride "interaction_info" {
                    text = "CHARACTER_TOOLTIP_INSTRUCTION"
                }
            }
        }
    }

    using = tooltip_es
    tooltip_offset = { 0 0 }
    tooltip_verticalbehavior = slide
    tooltip_horizontalbehavior = mirror

    block "portrait_transformation"
    {
        portrait_scale = { 1.0 1.0 }
        portrait_offset = { 0.0 0.0 }
    }
}

template Portrait_Background_Glows
{
    block "portrait_glow"
    {
        # Is Local Player
        block "glow_local_player"
        {
            background = {
                visible = "[And(Character.IsLocalPlayer, Not(Character.IsHovered))]"
                using = Background_Portrait_Glow
                color = { 0.5 0.6 0.7 0.6 }
            }
        }

        block "glow_other_player"
        {
            # Is Other Player
            background = {
                visible = "[And(Character.IsOtherPlayer, Not(Character.IsHovered))]"
                using = Background_Portrait_Glow
                color = { 0.8 0.4 0.55 0.6 }
            }
        }

        block "glow_selected"
        {
            background = {
                name = "selected"
                using = Background_Portrait_Glow
                color = { 0.8 0.7 0.5 0.6 }

                block "glow_selected_visible"
                {
                    visible = "[Character.IsSelected]"
                }
            }
        }

        block "glow_hovered"
        {
            background = {
                name = "hovered"
                visible = "[Character.IsHovered]"
                using = Background_Portrait_Glow
                color = { 0.9 0.8 0.6 0.6 }
            }
        }
    }
}

template Background_Portrait_Glow
{
    texture = "gfx/portraits/portrait_glow.dds"
}