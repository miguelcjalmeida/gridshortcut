######################################################
#################### DECLARE WAR "####################
######################################################

# These ~50 first lines are a placeholder way to show who will defend
window = {
	name = "declare_war_window"
	datacontext = "[DeclareWarInteractionWindow.GetCharacterInteractionConfirmationWindow]"
	parentanchor = top|right
	position = { -15 65 }
	allow_outside = yes
	size = { 600 960 }
	layer = top

	state = {
		name = "_show"
		on_start = "[GetVariableSystem.Clear( 'war_cb_combining' )]"
	}

	using = Animation_ShowHide_Standard

	scrollarea = {
		size = { 90 100% }

		scrollbar_vertical = {
			using = Scrollbar_Vertical
		}

		scrollbarpolicy_horizontal = always_off

		scrollwidget = {
			fixedgridbox = {
				name = "forced_defenders"
				addrow = 90
				addcolumn = 90
				datamodel = "[DeclareWarInteractionWindow.GetDefenders]"
				position = { 0 0 }
				item = {
					portrait_head_small = {
						datacontext = "[WarAllyItem.GetCharacter]"

						tooltip = "[WarAllyItem.GetAllianceReason]"

						blockoverride "opinion_box" {}

						blockoverride "portrait_button_template_tooltip"
						{
							tooltip = "WAR_DEFENDER_ALLY_TOOLTIP"
						}
					}
				}
			}
		}
	}

	widget = {
		name = "tutorial_trigger_declare_war_window"
		size = { 600 100% }

		using = Window_Background
		using = Window_Decoration_Spike

		vbox = {
			using = Window_Margins

			header_pattern = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "[DeclareWarInteractionWindow.GetHeader]"

				}

				blockoverride "button_close"
				{
					onclick = "[DeclareWarInteractionWindow.Close]"

				}
			}

			### Portrait / Info
			vbox = {
				hbox = {
					name = "portrait_and_info"
					layoutpolicy_horizontal = expanding
					margin = { 10 5 }

					background = {
						using = Background_Area
					}

					text_multi = {
						name = "info_text"
						max_width = 400
						margin = { 10 0}
						autoresize = yes
						text = "[DeclareWarInteractionWindow.GetPickPrompt]"
					}

					portrait_head = {
						datacontext = "[CharacterInteractionConfirmationWindow.GetRecipient]"

						blockoverride "portrait_button" {
							shortcut = "war_portrait_left"
							enabled = "[Not(GetVariableSystem.Exists('war_cb_combining'))]"
						}
						
						blockoverride "portrait_options_button" {
							shortcut = "war_portrait_left_options"
							enabled = "[Not(GetVariableSystem.Exists('war_cb_combining'))]"
						}
					}
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					margin = { 0 5 }
					spacing = 3

					coa_realm_small = {
						datacontext = "[CharacterInteractionConfirmationWindow.GetActor]"
					}

					vbox = {
						layoutpolicy_vertical = expanding
						text_single = {
							text = "DECLARE_WAR_ATTACKER_ALLY_COUNT"
							using = Font_Size_Medium
							align = nobaseline
						}

						expand = {}

						button_standard = {
							name = "view_allies_attacker"
							size = { 100 25 }
							enabled = "[And(GreaterThan_int32( DeclareWarInteractionWindow.GetAllyCountForAttacker, '(int32)0' ), Not(GetVariableSystem.Exists('war_cb_combining')))]"
							onclick = "[DeclareWarInteractionWindow.ShowAllyListSubviewForAttacker( '(bool)yes' )]"
							shortcut = "war_left_allies"

							hbox = {
								margin = { 20 0 }
								margin_right = 10

								text_single = {
									layoutpolicy_horizontal = growing
									text = "DECLARE_WAR_ALLY_LIST_BUTTON_TEXT"
									align = nobaseline
								}
							}
						}
					}

					expand = {}

					vbox = {
						layoutpolicy_vertical = expanding
						text_single = {
							text = "DECLARE_WAR_DEFENDER_ALLY_COUNT"
							using = Font_Size_Medium
							align = nobaseline
						}

						expand = {}

						button_standard = {
							name = "view_allies_defender"
							size = { 100 25 }
							enabled = "[And(GreaterThan_int32( DeclareWarInteractionWindow.GetAllyCountForDefender, '(int32)0' ), Not(GetVariableSystem.Exists('war_cb_combining')))]"
							onclick = "[DeclareWarInteractionWindow.ShowAllyListSubviewForAttacker( '(bool)no' )]"
							shortcut = "war_right_allies"

							hbox = {
								margin = { 20 0 }
								margin_right = 10

								text_single = {
									layoutpolicy_horizontal = growing
									text = "DECLARE_WAR_ALLY_LIST_BUTTON_TEXT"
									align = nobaseline
								}
							}
						}
					}

					coa_realm_small = {
						datacontext = "[CharacterInteractionConfirmationWindow.GetRecipient]"
					}
				}
			}

			### Casus Belli Scrollarea
			scrollbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				blockoverride "scrollbox_empty"
				{
					text = NO_VALID_CASUS_BELLIS
					visible = "[DeclareWarInteractionWindow.HasNoValidCasusBellis]"
				}

				blockoverride "scrollbox_content"
				{
					fixedgridbox = {
						name = "casus_belli_grid"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						addrow = 39
						addcolumn = 508

						button_normal = {
							size = { 0 0 }
							onclick = "[GetVariableSystem.Clear( 'war_cb_combining' )]"
							onclick = "[GetVariableSystem.Toggle( 'war_cb_combining' )]"
							shortcut = "war_cb_activator"
						}

						button_normal = {
							size = { 0 0 }
							visible = "[GetVariableSystem.Exists('war_cb_combining')]"
							state = {
								name = "_show"
								delay = 1
								on_start = "[GetVariableSystem.Clear( 'war_cb_combining' )]"
							}
						}

						item = {
							container = {
								widget = {									
									parentanchor = top|right

									button_normal = {
										size = { 0 0 }
										onclick = "[CasusBelliItem.OnClick]"
										onclick = "[PdxGuiTriggerAllAnimations('declare_war_goal_refresh')]"
										onclick = "[GetVariableSystem.Clear( 'war_cb_combining' )]"
										shortcut = "war_cb_invasion"
										visible = "[And(GetVariableSystem.Exists('war_cb_combining'), EqualTo_string(CasusBelliItem.GetLabel, SelectLocalization(CasusBelliItem.IsSelected, 'INVASION_CB_NAME', 'INVASION_CB_NAME')))]"
									}

									button_normal = {
										size = { 0 0 }
										onclick = "[CasusBelliItem.OnClick]"
										onclick = "[PdxGuiTriggerAllAnimations('declare_war_goal_refresh')]"
										onclick = "[GetVariableSystem.Clear( 'war_cb_combining' )]"
										shortcut = "war_cb_de_jure_duchy"
										visible = "[And(GetVariableSystem.Exists('war_cb_combining'), EqualTo_string(CasusBelliItem.GetLabel, SelectLocalization(CasusBelliItem.IsSelected, 'DEJURE_CB_DUCHY_NAME_GENERIC', 'DEJURE_CB_DUCHY_NAME_GENERIC')))]"
									}

									button_normal = {
										size = { 0 0 }
										onclick = "[CasusBelliItem.OnClick]"
										onclick = "[PdxGuiTriggerAllAnimations('declare_war_goal_refresh')]"
										onclick = "[GetVariableSystem.Clear( 'war_cb_combining' )]"
										shortcut = "war_cb_de_jure_county"
										visible = "[And(GetVariableSystem.Exists('war_cb_combining'), EqualTo_string(CasusBelliItem.GetLabel, SelectLocalization(CasusBelliItem.IsSelected, 'DEJURE_CB_COUNTY_NAME_GENERIC', 'DEJURE_CB_COUNTY_NAME_GENERIC')))]"
									}

									button_normal = {
										size = { 0 0 }
										onclick = "[CasusBelliItem.OnClick]"
										onclick = "[PdxGuiTriggerAllAnimations('declare_war_goal_refresh')]"
										onclick = "[GetVariableSystem.Clear( 'war_cb_combining' )]"
										shortcut = "war_cb_conquest_county"
										visible = "[And(GetVariableSystem.Exists('war_cb_combining'), EqualTo_string(CasusBelliItem.GetLabel, SelectLocalization(CasusBelliItem.IsSelected, 'CONQUEST_COUNTY_CB_NAME', 'CONQUEST_COUNTY_CB_NAME')))]"
									}

									button_normal = {
										size = { 0 0 }
										onclick = "[CasusBelliItem.OnClick]"
										onclick = "[PdxGuiTriggerAllAnimations('declare_war_goal_refresh')]"
										onclick = "[GetVariableSystem.Clear( 'war_cb_combining' )]"
										shortcut = "war_cb_conquest_duchy"
										visible = "[And(GetVariableSystem.Exists('war_cb_combining'), EqualTo_string(CasusBelliItem.GetLabel, SelectLocalization(CasusBelliItem.IsSelected, 'CONQUEST_DUCHY_CB_NAME', 'CONQUEST_DUCHY_CB_NAME')))]"
									}

									button_normal = {
										size = { 0 0 }
										onclick = "[CasusBelliItem.OnClick]"
										onclick = "[PdxGuiTriggerAllAnimations('declare_war_goal_refresh')]"
										onclick = "[GetVariableSystem.Clear( 'war_cb_combining' )]"
										shortcut = "war_cb_independence_war"
										visible = "[And(GetVariableSystem.Exists('war_cb_combining'), EqualTo_string(CasusBelliItem.GetLabel, SelectLocalization(CasusBelliItem.IsSelected, 'INDEPENDENCE_WAR_NAME', 'INDEPENDENCE_WAR_NAME')))]"
									}

									button_normal = {
										size = { 0 0 }
										onclick = "[CasusBelliItem.OnClick]"
										onclick = "[PdxGuiTriggerAllAnimations('declare_war_goal_refresh')]"
										onclick = "[GetVariableSystem.Clear( 'war_cb_combining' )]"
										shortcut = "war_cb_claim"
										visible = "[And(GetVariableSystem.Exists('war_cb_combining'), EqualTo_string(CasusBelliItem.GetType.GetName, SelectLocalization(CasusBelliItem.IsSelected, 'claim_cb', 'claim_cb')))]"
									}

									button_normal = {
										size = { 0 0 }
										# onclick = "[CasusBelliItem.OnClick]"
										# onclick = "[PdxGuiTriggerAllAnimations('declare_war_goal_refresh')]"
										# onclick = "[GetVariableSystem.Clear( 'war_cb_combining' )]"
										# shortcut = "war_cb_claim"
										# visible = "[And(GetVariableSystem.Exists('war_cb_combining'), EqualTo_string(CasusBelliItem.GetLabel, Concatenate('Your', SelectLocalization(CasusBelliItem.IsSelected, 'CLAIM_CB_NAME', 'CLAIM_CB_NAME'))))]"
									}

									button_normal = {
										size = { 0 0 }
										onclick = "[CasusBelliItem.OnClick]"
										onclick = "[PdxGuiTriggerAllAnimations('declare_war_goal_refresh')]"
										onclick = "[GetVariableSystem.Clear( 'war_cb_combining' )]"
										shortcut = "war_cb_subjugation"
										visible = "[And(GetVariableSystem.Exists('war_cb_combining'), EqualTo_string(CasusBelliItem.GetType.GetName, SelectLocalization(CasusBelliItem.IsSelected, 'tribal_subjugation_cb', 'tribal_subjugation_cb')))]"
									}

									button_normal = {
										size = { 0 0 }
										onclick = "[CasusBelliItem.OnClick]"
										onclick = "[PdxGuiTriggerAllAnimations('declare_war_goal_refresh')]"
										onclick = "[GetVariableSystem.Clear( 'war_cb_combining' )]"
										shortcut = "war_cb_raid_captives"
										visible = "[And(GetVariableSystem.Exists('war_cb_combining'), EqualTo_string(CasusBelliItem.GetType.GetName, SelectLocalization(CasusBelliItem.IsSelected, 'flowery_war_cb', 'flowery_war_cb')))]"
									}

									button_normal = {
										size = { 0 0 }
										onclick = "[CasusBelliItem.OnClick]"
										onclick = "[PdxGuiTriggerAllAnimations('declare_war_goal_refresh')]"
										onclick = "[GetVariableSystem.Clear( 'war_cb_combining' )]"
										shortcut = "war_cb_holy_war_county"
										visible = "[And(GetVariableSystem.Exists('war_cb_combining'), EqualTo_string(CasusBelliItem.GetLabel, SelectLocalization(CasusBelliItem.IsSelected, 'HOLY_WAR_COUNTY_NAME', 'HOLY_WAR_COUNTY_NAME')))]"
									}

									button_normal = {
										size = { 0 0 }
										onclick = "[CasusBelliItem.OnClick]"
										onclick = "[PdxGuiTriggerAllAnimations('declare_war_goal_refresh')]"
										onclick = "[GetVariableSystem.Clear( 'war_cb_combining' )]"
										shortcut = "war_cb_holy_war_duchy"
										visible = "[And(GetVariableSystem.Exists('war_cb_combining'), EqualTo_string(CasusBelliItem.GetLabel, SelectLocalization(CasusBelliItem.IsSelected, 'HOLY_WAR_DUCHY_NAME', 'HOLY_WAR_DUCHY_NAME')))]"
									}

									button_normal = {
										size = { 0 0 }
										onclick = "[CasusBelliItem.OnClick]"
										onclick = "[PdxGuiTriggerAllAnimations('declare_war_goal_refresh')]"
										onclick = "[GetVariableSystem.Clear( 'war_cb_combining' )]"
										shortcut = "war_cb_holy_war_kingdom"
										visible = "[And(GetVariableSystem.Exists('war_cb_combining'), EqualTo_string(CasusBelliItem.GetLabel, SelectLocalization(CasusBelliItem.IsSelected, 'HOLY_WAR_KINGDOM_NAME', 'HOLY_WAR_KINGDOM_NAME')))]"
									}

									button_normal = {
										size = { 0 0 }
										onclick = "[CasusBelliItem.OnClick]"
										onclick = "[PdxGuiTriggerAllAnimations('declare_war_goal_refresh')]"
										onclick = "[GetVariableSystem.Clear( 'war_cb_combining' )]"
										shortcut = "war_cb_crusade"
										visible = "[And(GetVariableSystem.Exists('war_cb_combining'), EqualTo_string(CasusBelliItem.GetType.GetName, SelectLocalization(CasusBelliItem.IsSelected, 'directed_great_holy_war', 'directed_great_holy_war')))]"
									}

									button_normal = {
										size = { 0 0 }
										onclick = "[CasusBelliItem.OnClick]"
										onclick = "[PdxGuiTriggerAllAnimations('declare_war_goal_refresh')]"
										onclick = "[GetVariableSystem.Clear( 'war_cb_combining' )]"
										shortcut = "war_cb_excomunication"
										visible = "[And(GetVariableSystem.Exists('war_cb_combining'), EqualTo_string(CasusBelliItem.GetType.GetName, SelectLocalization(CasusBelliItem.IsSelected, 'excommunication_war', 'excommunication_war')))]"
									}

									button_normal = {
										size = { 0 0 }
										onclick = "[CasusBelliItem.OnClick]"
										onclick = "[PdxGuiTriggerAllAnimations('declare_war_goal_refresh')]"
										onclick = "[GetVariableSystem.Clear( 'war_cb_combining' )]"
										shortcut = "war_cb_depose"
										visible = "[And(GetVariableSystem.Exists('war_cb_combining'), EqualTo_string(CasusBelliItem.GetType.GetName, SelectLocalization(CasusBelliItem.IsSelected, 'depose_war', 'depose_war')))]"
									}
								}

								button_standard = {
									name = "background_button"
									size = { 500 35 }
									down = "[CasusBelliItem.IsSelected]"
									onclick = "[CasusBelliItem.OnClick]"
									onclick = "[PdxGuiTriggerAllAnimations('declare_war_goal_refresh')]"

									using = tooltip_es

									hbox = {
										name = "tutorial_highlight_cb_button"
										margin = { 5 0 }
										spacing = 5
										alwaystransparent = yes

										icon = {
											name = "icon"
											texture = "[CasusBelliItem.GetType.GetIcon]"
											size = { 33 33 }
											alwaystransparent = yes
										}

										text_single = {
											name = "name"
											layoutpolicy_horizontal = expanding
											text = "[CasusBelliItem.GetLabel]"
											align = nobaseline
											autoresize = no
											alwaystransparent = yes
										}

										icon = {
											visible = "[Not( CasusBelliItem.IsValid )]"
											size = { 25 25 }
											texture = "gfx/interface/icons/symbols/icon_warning.dds"
											alwaystransparent = yes
											tooltip = "[CasusBelliItem.GetInvalidText]"
										}
									}
								}
							}
						}
					}
				}
			}

			text_single = {
				visible = "[Not(DeclareWarInteractionWindow.HasSelectedCasusBelli)]"
				layoutpolicy_vertical = expanding
				text = "DECLARE_WAR_NO_CASUS_BELLI_CHOSEN"

				using = Animation_Tab_Switch
			}

			### War preview after selecting a Casus Belli
			vbox = {
				name = "war_preview"
				visible = "[DeclareWarInteractionWindow.HasSelectedCasusBelli]"
				layoutpolicy_horizontal = expanding
				margin_bottom = 15

				using = Animation_Tab_Switch

				## OUTCOME EFFECTS OF WAR
				vbox = {
					name = "effects_area"
					layoutpolicy_horizontal = expanding
					spacing = 10

					hbox = {
						layoutpolicy_horizontal = expanding
						visible = "[DeclareWarInteractionWindow.CanShowWarGoalSubview]"

						hbox = {	
							spacing = 5
							text_single = {
								text = "DECLARE_WAR_CHANGE_WAR_GOAL_LABEL"
							}

							overlappingitembox = {
								size = { 170 45 }
								datamodel = "[DeclareWarInteractionWindow.GetTitleItems]"

								item = {
									coa_title_tiny_crown = {
										datacontext = "[CasusBelliTitleItem.GetTitle]"
										visible = "[CasusBelliTitleItem.IsSelected]"
										parentanchor = center
										using = tooltip_ne
										margin_left = 15
									}
								}
							}
						}

						button_standard = {
							name = "change_war_goal_button"
	
							visible = "[DeclareWarInteractionWindow.CanShowWarGoalSubview]"
							onclick = "[DeclareWarInteractionWindow.GetWarGoal.Toggle]"
							shortcut = "war_change_beneficiary"
							enabled = "[Not(GetVariableSystem.Exists('war_cb_combining'))]"
							down = "[DeclareWarInteractionWindow.GetWarGoal.IsShown]"
	
							tooltip = "DECLARE_WAR_CHANGE_WAR_GOAL_TOOLTIP"
							using = tooltip_se
							text = "DECLARE_WAR_CHANGE_WAR_GOAL_TITLE"
						}
					}

					hbox = {
						layoutpolicy_horizontal = expanding

						text_single = {
							layoutpolicy_horizontal = expanding
							text = "[DeclareWarInteractionWindow.GetCurrentTabEffectsLabel]"
							margin_left = 15
						}

						background = {
							using = Background_Area
						}

						### Tabs
						hbox = {
							name = "outcome_effect_tabs"
							spacing = 5
							margin_right = 10


							button_standard = {
								name = "defeat_button"
								size = { 45 40 }

								down = "[DeclareWarInteractionWindow.IsEffectsTabDefeat]"
								onclick = "[DeclareWarInteractionWindow.SetEffectsTabDefeat]"
								shortcut = "war_surrender"
								enabled = "[Not(GetVariableSystem.Exists('war_cb_combining'))]"
								tooltip = "TAB_DEFEAT"
								using = tooltip_se

								button_icon_war_defeat = {
									parentanchor = center
									alwaystransparent = yes
								}

							}

							button_standard = {
								name = "white_peace_button"
								size = { 45 40 }

								down = "[DeclareWarInteractionWindow.IsEffectsTabWhitePeace]"
								onclick = "[DeclareWarInteractionWindow.SetEffectsTabWhitePeace]"
								shortcut = "war_white_peace"
								visible = "[DeclareWarInteractionWindow.GetCbType.IsWhitePeacePossible]"
								enabled = "[Not(GetVariableSystem.Exists('war_cb_combining'))]"
								tooltip = "TAB_WHITE_PEACE"
								using = tooltip_se

								button_icon_war_peace = {
									parentanchor = center
									alwaystransparent = yes
								}
							}

							button_standard = {
								name = "victory_button"
								size = { 45 40 }
								down = "[DeclareWarInteractionWindow.IsEffectsTabVictory]"
								onclick = "[DeclareWarInteractionWindow.SetEffectsTabVictory]"
								shortcut = "war_enforce_demands"
								enabled = "[Not(GetVariableSystem.Exists('war_cb_combining'))]"
								tooltip = "TAB_VICTORY"
								using = tooltip_se

								button_icon_war_victory = {
									parentanchor = center
									alwaystransparent = yes
								}
							}
						}
					}

					### Info
					scrollbox = {
						layoutpolicy_horizontal = expanding
						size = { 0 200 }

						blockoverride "scrollbox_content"
						{
							hbox = {
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding

								vbox = {
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding

									hbox = {
										layoutpolicy_horizontal = expanding

										button_normal = {
											name = "button_expand_other_war_effects"
											texture = "gfx/interface/buttons/button_tree_expand.dds"
											framesize = { 36 36 }
											size = { 22 22 }
											frame = "[BoolTo1And2(DeclareWarInteractionWindow.IsWarEffectsExpanded)]"

											onclick = "[DeclareWarInteractionWindow.ToggleWarEffectsExpanded]"
										}

										text_multi = {
											name = "main_end_war_effect"
											layoutpolicy_horizontal = expanding
											autoresize = yes
											max_width = 360
											default_format = "#high"
											text = "[DeclareWarInteractionWindow.GetCurrentTabMainOutputDescription]"
										}
									}

									text_multi = {
										name = "other_end_war_effects"
										visible = "[DeclareWarInteractionWindow.IsWarEffectsExpanded]"
										layoutpolicy_horizontal = expanding
										autoresize = yes
										max_width = 360
										text = "[DeclareWarInteractionWindow.GetCurrentTabEffectsDescription]"
									}

									expand = {}
								}

								vbox = {
									layoutpolicy_vertical = expanding
									datacontext = "[DeclareWarInteractionWindow.GetClaimant]"
									
									portrait_shoulders = {
										visible = "[Character.IsValid]"
									}

									expand = {}
								}
							}
						}
					}
				}

				vbox = {
					name = "additional_warning_box"
					#	visible = "[DeclareWarInteractionWindow.ShouldShowAdditionalWarning]"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					margin_top = 5
					margin_bottom = 5

					background = {
						using = Background_Area
					}

					hbox = {
						spacing = 10
						margin_right = 15

						icon = {
							name = "attacker_faith_might_join"
							datacontext = "[GetPlayer]"
							visible = "[DeclareWarInteractionWindow.GetCbType.GuiAttackerFaithMightJoin]"

							texture = "[Character.GetFaith.GetIcon]"
							size = { 40 40 }
							tooltip = "WAR_ATTACKER_FAITH_MIGHT_JOIN"

							icon = {
								texture = "gfx/interface/icons/casus_bellis/_default.dds"
								size = { 25 25 }
								position = { 5 0 }
								parentanchor = bottom|right
							}
						}

						icon = {
							name = "defender_faith_might_join"
							datacontext = "[CharacterInteractionConfirmationWindow.GetRecipient]"
							visible = "[DeclareWarInteractionWindow.GetCbType.GuiDefenderFaithMightJoin]"

							texture = "[Character.GetFaith.GetIcon]"
							size = { 40 40 }
							tooltip = "WAR_DEFENDER_FAITH_MIGHT_JOIN"

							icon = {
								texture = "gfx/interface/icons/symbols/icon_warning.dds"
								size = { 25 25 }
								position = { 5 0 }
								parentanchor = bottom|right
							}
						}


						text_multi = {
							max_width = 350
							autoresize = yes
							text = "[DeclareWarInteractionWindow.WriteAdditionalWarningMessage]"
						}
					}
				}

				vbox = {
					layoutpolicy_horizontal = expanding
					spacing = 15
					margin_bottom = 5

					hbox = {
						layoutpolicy_horizontal = expanding
						spacing = 5
						margin = { 10 0 }

						### Strength Balance
						strength_balance = {
							datacontext = "[DeclareWarInteractionWindow.GetMilitaryStrengthInfo]"
							name = "strength_balance"
						}

						expand = {}

						### COST
						declare_war_cost = {}
					}
				}
			}

			vbox_interaction_options = {
				visible = "[DeclareWarInteractionWindow.HasSelectedCasusBelli]"
				layoutpolicy_horizontal = expanding
			}

			hbox = {
				name = "tutorial_highlight_declare_war_send_button"
				margin_bottom = 10

				button_standard_big = {
					name = "send_button"
					enabled = "[And(DeclareWarInteractionWindow.CanSend, Not(GetVariableSystem.Exists('war_cb_combining')))]"
					onclick = "[DeclareWarInteractionWindow.Send]"
					shortcut = "confirm"
					shortcut = "confirm_2"

					text = "[CharacterInteractionConfirmationWindow.GetSendName]"
					default_format = "#high"

					tooltip = "[DeclareWarInteractionWindow.GetDeclareWarButtonTooltip]"

					clicksound = "event:/SFX/UI/War/sfx_ui_war_declare_war"

					animation_aggressive = {
						visible = "[DeclareWarInteractionWindow.CanSend]"
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						margin_right = 10

						expand = {}

						icon = {
							name = "player_cost_ignore"
							visible = "[And(DeclareWarInteractionWindow.HasSelectedCasusBelli, Or( Or( Not( DeclareWarInteractionWindow.CanAffordCosts ), DeclareWarInteractionWindow.IsBreakingTruce), DeclareWarInteractionWindow.IsBreakingAlliance))]"
							texture = "gfx/interface/icons/symbols/icon_warning.dds"
							tooltip = "[DeclareWarInteractionWindow.GetWarningTooltipDesc]"
							size = { 30 30 }
						}
					}
				}
			}
		}
	}

	window = {
		name = "character_ally_list_subview"

		datacontext = "[DeclareWarInteractionWindow.GetAllyListContext]"
		visible = "[AllyListSubview.IsShown]"
		parentanchor = top|right
		position = { -600 120 }
		size = { 480 750 }

		using = Window_Background_Subwindow
		using = Animation_ShowHide_Standard

		vbox = {
			margin = { 3 3 }

			header_pattern = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "[AllyListSubview.GetHeaderTitle]"
				}
				blockoverride "button_close"
				{
					onclick = "[AllyListSubview.Close]"
				}
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				margin_left = 20

				dropDown_sort = {
					datamodel = "[AllyListSubview.GetSortItems]"
					onselectionchanged = "[AllyListSubview.SetCurrentFilterFromIndex]"
					selectedindex = "[AllyListSubview.GetCurrentFilterIndex]"
				}

				expand = {}
			}

			expand = {}

			scrollbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				blockoverride "scrollbox_margins"
				{
					margin = { 10 15 }
				}

				blockoverride "scrollbox_content"
				{
					vbox = {
						datamodel = "[AllyListSubview.GetAllyList]"
						layoutpolicy_horizontal = expanding
						spacing = 15

						item = {
							hbox = {
								background = {
									using = Background_Area
								}
								layoutpolicy_horizontal = expanding
								portrait_head_small = {}

								vbox = {
									layoutpolicy_vertical = expanding

									expand = {}

									text_single = {
										name = "ally_character_name"
										text = "[Character.GetName]"
										using = Font_Size_Medium
										align = nobaseline
									}

									hbox = {
										layoutpolicy_horizontal = expanding

										text_single = {
											name = "ally_military_strength_text"
											text = "DECLARE_WAR_ALLY_MILITARY_STRENGTH_DESC"
											align = nobaseline
										}

										expand = {}
									}

									expand = {}
								}

								expand = {}
							}
						}
					}
				}
			}
		}
	}

	window = {
		name = "war_goal_subview"
		datacontext = "[DeclareWarInteractionWindow.GetWarGoal]"
		visible = "[And(DeclareWarInteractionWindow.HasSelectedCasusBelli, WarGoalSubview.IsShown)]"
		parentanchor = top|right
		position = { -590 120 }
		size = { 380 750 }

		using = Window_Background_Subwindow
		using = Animation_ShowHide_Standard

		vbox = {
			margin = { 3 3 }

			header_pattern = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "DECLARE_WAR_CHANGE_WAR_GOAL_TITLE"
				}
				blockoverride "button_close"
				{
					visible = no
				}
			}

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "DECLARE_WAR_CHOOSE_WARGOAL_INSTRUCTION"
				default_format = "#instruction"
				margin_left = 10
				margin_bottom = 5
			}

			scrollbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				blockoverride "scrollbox_margins"
				{
					margin = { 10 15 }
				}

				blockoverride "scrollbox_content"
				{

					vbox = {
						datamodel = "[DeclareWarInteractionWindow.GetTitleItems]"
						layoutpolicy_horizontal = expanding
						spacing = 3

						state = {
							name = "declare_war_goal_refresh"
							using = Animation_Refresh_FadeOut
						}

						state = {
							using = Animation_Refresh_FadeIn
						}

						item = {
							# widget = {
							# 	name = "war_goal_list_item"
							# 	layoutpolicy_horizontal = expanding
							# 	size = { 0 45 }

							button_standard = {
								down = "[CasusBelliTitleItem.IsSelected]"
								onclick = "[CasusBelliTitleItem.OnClick]"
								layoutpolicy_horizontal = expanding
								size = { 0 45 }

								#	size = "[CasusBelliTitleItem.GetSize]"
								#	parentanchor = right

								hbox = {

									widget = {
										layoutpolicy_vertical = expanding
										size = { 45 0 }

										coa_title_tiny_crown = {
											datacontext = "[CasusBelliTitleItem.GetTitle]"
											parentanchor = center
											using = tooltip_ne
										}
									}

									text_single = {
										name = "text"
										layoutpolicy_horizontal = expanding
										autoresize = no
										text = "[CasusBelliTitleItem.GetTitle.GetNameNoTooltip]"
										default_format = "#high"
										align = nobaseline
									}
								}
							}
							#}
						}
					}
				}
			}

			vbox = {
				margin = { 0 10 }
				spacing = 10

				### COST
				declare_war_cost = {}

				button_primary = {
					name = "confirm_button"

					onclick = "[DeclareWarInteractionWindow.GetWarGoal.Close]"
					text = "CONFIRM"
				}
			}
		}
	}
}

types DeclareWarTypes
{
	type declare_war_cost = vbox {
		name = "cost"
		margin = { 10 0 }

		background = {
			visible = "[Not( DeclareWarInteractionWindow.CanAffordCosts )]"

			using = Status_Bad
		}


		hbox = {
			name = "costs"
			visible = "[DeclareWarInteractionWindow.HasCost]"

			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			text_single = {
				name = "cost_heading"
				text = "WAR_COST"
				using = Font_Size_Big
			}

			spacing = 5

			text_single = {
				name = "piety"
				datacontext = "[DeclareWarInteractionWindow.GetCostBreakdown( 'piety' )]"

				text = "@piety_icon![DeclareWarInteractionWindow.GetSpecificCost( 'piety' )]"
				visible = "[NotEqualTo_CFixedPoint( DeclareWarInteractionWindow.GetSpecificCost( 'piety' ), '(CFixedPoint)0' )]"

				tooltipwidget = { widget_value_breakdown_tooltip = {} }
				using = Font_Size_Big
				default_format = "#high"
			}

			text_single = {
				name = "prestige"
				datacontext = "[DeclareWarInteractionWindow.GetCostBreakdown( 'prestige' )]"

				text = "@prestige_icon![DeclareWarInteractionWindow.GetSpecificCost( 'prestige' )]"
				visible = "[NotEqualTo_CFixedPoint( DeclareWarInteractionWindow.GetSpecificCost( 'prestige' ), '(CFixedPoint)0' )]"

				tooltipwidget = { widget_value_breakdown_tooltip = {} }
				using = Font_Size_Big
				default_format = "#high"
			}

			text_single = {
				name = "renown"
				datacontext = "[DeclareWarInteractionWindow.GetCostBreakdown( 'renown' )]"

				text = "@dynasty_prestige_icon![DeclareWarInteractionWindow.GetSpecificCost( 'renown' )]"
				visible = "[NotEqualTo_CFixedPoint( DeclareWarInteractionWindow.GetSpecificCost( 'renown' ), '(CFixedPoint)0' )]"

				tooltipwidget = { widget_value_breakdown_tooltip = {} }
				using = Font_Size_Big
				default_format = "#high"
			}

			text_single = {
				name = "gold"
				datacontext = "[DeclareWarInteractionWindow.GetCostBreakdown( 'gold' )]"

				text = "@gold_icon![DeclareWarInteractionWindow.GetSpecificCost( 'gold' )]"
				visible = "[NotEqualTo_CFixedPoint( DeclareWarInteractionWindow.GetSpecificCost( 'gold' ), '(CFixedPoint)0' )]"

				tooltipwidget = { widget_value_breakdown_tooltip = {} }
				using = Font_Size_Big
				default_format = "#high"
			}
		}

		text_single  = {
			visible = "[Not(DeclareWarInteractionWindow.HasCost)]"
			text = "DECLARE_WAR_NO_COST"
			using = Font_Size_Medium
		}
	}
}
