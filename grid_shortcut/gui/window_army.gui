window = {
	name = "army_window"
	datacontext = "[ArmyWindow.GetArmy]"

	parentanchor = bottom|left
	size = { 770 345 }
	filter_mouse = left|right
	movable = no
	layer = middle

	background = {
		texture = "gfx/interface/tiles/tile_window_background_subwindow.dds"
		spriteType = Corneredtiled
		spriteborder = { 18 18 }
		margin = { -23 -17 }
		margin_left = 20
		margin_bottom = 20

		modify_texture = {
			name = "overlay"
			texture = "gfx/interface/tiles/tile_overlay_effect_02.dds"
			spriteType = Corneredstretched
			spriteborder = { 0 0 }
			blend_mode = overlay
		}
	}

	state = {
		name = _show
		on_start = "[GetVariableSystem.Set( 'county_view_open', 'true' )]"
		on_start = "[GetVariableSystem.Set( 'hide_bottom_left_HUD', 'true' )]"

		using = Animation_FadeIn_Standard
		using = Sound_WindowShow_Standard

		position = { 0 0 }
	}

	state = {
		name = _hide
		on_start = "[GetVariableSystem.Clear( 'county_view_open' )]"
		on_start = "[GetVariableSystem.Clear( 'hide_bottom_left_HUD' )]"

		using = Animation_FadeOut_Standard
		using = Sound_WindowHide_Standard
		position = { -60 60 }
	}

	vbox = {
		margin_right = 35
		margin_top = 30
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = expanding

		set_parent_size_to_minimum = yes

		spacer = {
			size = { 740 0 }
		}

		### close button row
		hbox = {
			## Header
			layoutpolicy_horizontal = expanding
			spacing = 5

			spacer = {
				size = { 5 0}
			}

			vbox = {
				layoutpolicy_vertical = growing

				hbox = {
					## Header
					layoutpolicy_horizontal = expanding
					spacing = 5
					widget = {
						size = { 45 50 }

						coa_realm_small_crown = {
							name = "owner_flag"
							datacontext = "[Army.GetOwner]"
							parentanchor = bottom|hcenter
							widgetanchor = bottom|hcenter
						}
					}

					hbox = {
						spacing = 3

						icon = {
							name = "icon_soldier"
							texture = "gfx/interface/icons/icon_soldier.dds"
							size = { 30 30 }
							visible = "[GreaterThan_int32(GetDataModelSize(ArmyWindow.GetSelectedUnitItems), '(int32)1')]"
						}

						text_single = {
							name = "strength"
							visible = "[GreaterThan_int32(GetDataModelSize(ArmyWindow.GetSelectedUnitItems), '(int32)1')]"
							text = "[ArmyWindow.GetTotalSoldierCountString]"
							align = nobaseline
						}

						using = tooltip_ne
						tooltip = "[ArmyWindow.GetAllArmiesCompositionString]"
					}
				}

				expand = {
					layoutpolicy_vertical = growing
				}
			}

			## Armies flag
			fixedgridbox = {
				addcolumn = 50
				addrow = 50
				name = "banner_items_grid"
				datamodel = "[ArmyWindow.GetSelectedUnitItems]"
				visible = "[GreaterThan_int32(GetDataModelSize(ArmyWindow.GetSelectedUnitItems), '(int32)1')]"
				datamodel_wrap = 8
				flipdirection = yes

				item = {
					widget = {
						size = { 50 50 }
						name = "unit_item"

						button = {
							name = "unit_icon"
							texture = "gfx/interface/icons/unit_view/unit_view_banner.dds"
							clicksound = "event:/SFX/UI/Unit/Army/sfx_ui_unit_army_select_army"

							gfxtype = updownframedbuttongfx
							framesize = { 96 96 }
							size = { 50 50 }
							onclick = "[PdxGuiTriggerAllAnimations('army_change')]"
							onrightclick = "[SelectedUnitItem.OnRightClick]"
							down = "[SelectedUnitItem.IsShown]"
							effectname = "NoHighlight"

							upframe = 1
							overframe = 2
							downframe = 3

							highlight_icon = {
								visible = "[SelectedUnitItem.IsGatheringArmy]"
								size = { 50 50 }
								texture = "gfx/interface/icons/unit_view/unit_view_gathering.dds"
							}

							highlight_icon = {
								visible = "[SelectedUnitItem.GetArmy.IsEmbarked]"
								size = { 50 50 }
								texture = "gfx/interface/icons/unit_view/unit_view_disembarking.dds"
							}

							icon = {
								visible = "[Or( And(SelectedUnitItem.IsShown, SelectedUnitItem.GetArmy.IsEmbarked), And(SelectedUnitItem.IsShown, SelectedUnitItem.IsGatheringArmy))]"
								framesize = { 96 96 }
								size = { 50 50 }
								frame = 5
								alwaystransparent = yes
								texture = "gfx/interface/icons/unit_view/unit_view_banner.dds"
							}

							icon = {
								visible = "[SelectedUnitItem.IsShown]"
								framesize = { 96 96 }
								size = { 50 50 }
								frame = 4
								alwaystransparent = yes
								texture = "gfx/interface/icons/unit_view/unit_view_banner.dds"
							}

							state = {
								name = _mouse_click
								delay = 0.2
								on_finish = "[SelectedUnitItem.OnClick]"
							}
						}

						text_single = {
							parentanchor = top|hcenter
							alwaystransparent = yes
							position = { 0 10 }

							text = "[SelectedUnitItem.GetArmy.GetSoldierCount|*]"
						}

						tooltip = "[SelectedUnitItem.GetTooltip]"
						using = tooltip_ne
					}
				}
			}

			expand = {
				layoutpolicy_horizontal = expanding
			}

			vbox = {
				layoutpolicy_vertical = growing

				hbox = {
					widget = {
						size = { 42 45 }

						button_round = {
							name = "reorganize_button"
							enabled = "[ArmyWindow.CanReorgSelected]"
							tooltip = "[ArmyWindow.BuildReorgTooltip]"
							using = tooltip_ne
							parentanchor = bottom
							
							button_army_reorganize = {
								shortcut = "army_reorganize"
								onclick = "[ArmyWindow.ToggleReorganizationWindow]"
								parentanchor = center
							}
						}
					}

					widget = {
						size = { 42 45 }

						button_round = {
							name = "merge_button"
							enabled = [ArmyWindow.CanMerge]
							tooltip = "[ArmyWindow.BuildMergeTooltip]"
							using = tooltip_ne
							parentanchor = bottom

							button_army_merge = {
								parentanchor = center
								onclick = "[ArmyWindow.MergeSelected]"
								shortcut = "army_merge"
							}
						}
					}

					spacer = {
						size = { 10 0}
					}

					buttons_window_control = {

						blockoverride "button_close"
						{
							onclick = "[ArmyWindow.CloseAndDeselect]"
						}
					}
				}

				expand = {
					layoutpolicy_vertical = growing
				}
			}
		}

		### Dark header row
		hbox = {
			### name
			visible = "[Not(GreaterThan_int32(GetDataModelSize(ArmyWindow.GetSelectedUnitItems), '(int32)1'))]"
			layoutpolicy_horizontal = expanding
			minimumsize = { 0 30 }
			margin = { 10 4 }

			spacing = 5

			background = {
				margin_left = 15
				using = Background_Area_Dark
			}

			hbox = {
				layoutpolicy_vertical = expanding

				text_single = {
					name = "name"
					text = "[Army.GetNameNoTooltip]"
					align = left
					using = Font_Size_Medium
					max_width = 600
				}
			}

			expand = {}

			hbox = {
				name = "loot"
				visible = "[Army.IsRaidArmy]"
				tooltip = "ARMY_RAID_LOOT_TOOLTIP"

				icon = {
					name = "loot_icon"
					size = { 35 35 }
					texture = "gfx/interface/icons/icon_gold.dds"
				}

				text_single = {
					name = "loot"
					text = "[Army.GetRaidLoot|0]/[Army.GetLootCap|0]"
				}
			}

			hbox = {
				tooltip = "ARMY_ATTRITION_TT"

				icon = {
					texture = "gfx/interface/mapitems/attrition_icon.dds"
					size = { 35 35 }
				}

				text_single = {
					name = "attrition"
					text = "[Army.GetArmyAttritionPercentage|%0-]"
				}
			}

			hbox = {
				name = "supplies"
				tooltip = "[ArmyWindow.GetSupplyStateTooltip]"

				icon = {
					name = "supply_icon"
					size = { 40 40 }
					framesize = { 60 60 }
					frame = "[ArmyWindow.GetSupplyStateFrame]"
					texture = "gfx/interface/icons/icon_supplies.dds"
				}

				icon = {
					name = "supply_trend_icon"
					size = { 25 25 }
					visible = "[ArmyWindow.ShowSupplyTrend]"
					texture = "gfx/interface/icons/icon_supplies_trend.dds"
				}

				text_single = {
					name = "supply_text"
					text = "[ArmyWindow.GetCurrentSupply]/[ArmyWindow.GetFullSupplyCapacity]"
					minimumsize = { 60 0 }
					align = right
				}
			}
		}

		### selected Dark header row
		button = {
			layoutpolicy_horizontal = expanding
			minimumsize = { 0 48  }
			name = "select_this_only"
			shortcut = "army_select_this_only"
			visible = "[GreaterThan_int32(GetDataModelSize(ArmyWindow.GetSelectedUnitItems), '(int32)1')]"
			onclick = "[ArmyWindow.SelectThisUnitOnly]"

			tooltip = "ARMY_SELECT_THIS_ONLY"

			state = {
				name = "army_change"
				alpha = 0
				duration = 0.2
				next = "b"
				using = Animation_Curve_Default
			}

			state = {
				name = "b"
				alpha = 1
				duration = 0.2
				using = Animation_Curve_Default
			}

			hbox = {
				### name
				layoutpolicy_horizontal = expanding
				margin = { 10 4 }

				spacing = 5

				background = {
					margin_left = 15
					using = Background_Area_Dark
				}

				hbox = {
					layoutpolicy_vertical = expanding
					spacing = 5

					text_single = {
						name = "name"
						text = "[Army.GetNameNoTooltip]"
						align = left|nobaseline
						using = Font_Size_Medium
						max_width = 600
					}

					button_select_arrow = {
						alwaystransparent = yes
						size = { 20 20 }
					}
				}

				expand = {}

				hbox = {
					name = "loot"
					visible = "[Army.IsRaidArmy]"
					tooltip = "ARMY_RAID_LOOT_TOOLTIP"

					icon = {
						name = "loot_icon"
						size = { 35 35 }
						texture = "gfx/interface/icons/icon_gold.dds"
					}

					text_single = {
						name = "loot"
						text = "[Army.GetRaidLoot|0]/[Army.GetLootCap|0]"
					}
				}

				hbox = {
					tooltip = "ARMY_ATTRITION_TT"

					icon = {
						texture = "gfx/interface/mapitems/attrition_icon.dds"
						size = { 35 35 }
					}

					text_single = {
						name = "attrition"
						text = "[Army.GetArmyAttritionPercentage|%0-]"
					}
				}

				hbox = {
					name = "supplies"
					tooltip = "[ArmyWindow.GetSupplyStateTooltip]"

					icon = {
						name = "supply_icon"
						size = { 40 40 }
						framesize = { 60 60 }
						frame = "[ArmyWindow.GetSupplyStateFrame]"
						texture = "gfx/interface/icons/icon_supplies.dds"
					}

					icon = {
						name = "supply_trend_icon"
						size = { 25 25 }
						visible = "[ArmyWindow.ShowSupplyTrend]"
						texture = "gfx/interface/icons/icon_supplies_trend.dds"
					}

					text_single = {
						name = "supply_text"
						text = "[ArmyWindow.GetCurrentSupply]/[ArmyWindow.GetFullSupplyCapacity]"
						minimumsize = { 60 0 }
						align = right
					}
				}
			}
		}

		### info row
		hbox = {
			maximumsize = { -1 274 }
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			margin_right = 5

			state = {
				name = "army_change"
				alpha = 0.5
				duration = 0.2
				next = "b"
				using = Animation_Curve_Default
			}

			state = {
				name = "b"
				alpha = 1
				duration = 0.2
				using = Animation_Curve_Default
			}

			datacontext = "[Army.GetCommander]"

			### Commmander ###
			hbox = {
				layoutpolicy_vertical = expanding
				margin_left = 5

				background = {
					using = Background_Area
					margin_top = 5
					margin_right = 3
				}

				background = {
					visible = "[ObjectsEqual( Character.Self, GetPlayer )]"
					texture = "gfx/interface/buttons/background_pattern.dds"
					spriteType = Corneredtiled
					alpha = 0.3

					using = Color_Blue

					modify_texture = {
						texture = "gfx/interface/tiles/tile_fade_mask.dds"
						blend_mode = alphamultiply
						alpha = 0.9
					}

					modify_texture = {
						texture = "gfx/interface/buttons/background_alpha.dds"
						spriteType = Corneredtiled
						spriteborder = { 15 15 }
						blend_mode = alphamultiply
					}
				}

				background = {
					visible = "[ObjectsEqual( Character.Self, GetPlayer )]"
					texture = "gfx/interface/buttons/background_frame.dds"
					spriteType = Corneredstretched
					spriteborder = { 15 15 }
					alpha = 0.25

					using = Color_Blue

					modify_texture = {
						texture = "gfx/interface/tiles/tile_fade_mask.dds"
						blend_mode = alphamultiply
						alpha = 0.9
					}
				}

				widget = {
					size = { 200 210 }

					portrait_torso = {
						name = "army_commander"
						visible = "[Character.IsValid]"
						size = { 100% 100% }

						blockoverride "opinion_box"
						{}
						blockoverride "status_icons"
						{}

						blockoverride "coa"
						{}

						blockoverride "portrait_button_template_onclick"
						{
							onclick = "[DefaultOnCharacterClick(Character.GetID)]"
						}

						blockoverride "portrait_button" {
							mask = "gfx/portraits/portrait_mask_council.dds"
							size = { 195 225 }
						}
					}

					portrait_torso = {
						name = "no_commander"
						visible = "[Not( Character.IsValid )]"
						position = { 15 0 }

						blockoverride "opinion_box"
						{}
						blockoverride "status_icons"
						{}

						blockoverride "portrait_button_template_onclick"
						{
							onclick = "[ArmyWindow.ShowCommanders]"
						}

						blockoverride "onclick" {
							onclick = "[ArmyWindow.ShowCommanders]"

							button_icon = {
								parentanchor = center
								alwaystransparent = yes
								size = { 50 50 }
								position = { 0 20 }
								texture = "gfx/interface/buttons/button_icons/plus.dds"
							}
						}
					}

					widget = {
						size = { 100% 100% }

						widget = {
							size = { 42 33 }
							parentanchor = right

							icon = {
								name = "commander_is_leader"
								texture = "gfx/interface/icons/commander_is_leader.dds"
								visible = "[Army.CommanderIsOwner]"
								tooltip = "COMMANDER_IS_LEADER_TOOLTIP"
								size = { 40 40 }
							}
						}

						vbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							hbox = {
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding

								vbox = {
									minimumsize = { 40 0 }
									layoutpolicy_vertical = expanding
									expand = {}

									fixedgridbox = {
										name = "commander_traits"
										datamodel = "[ArmyWindow.GetCommanderTraits]"
										setitemsizefromcell = yes
										addcolumn = 40
										addrow = 40
										datamodel_wrap = 3

										item = {
											container = {
												visible = "[Trait.IsValid]"

												icon_trait = {
													blockoverride "icon_size"
													{
														size = { 40 40 }
													}
												}
											}
										}
									}

									hbox = {
										layoutpolicy_horizontal = expanding
										widget = {
											size = { 45 35 }
											visible = "[Character.IsValid]"
											tooltip = "[Character.GetCommanderAdvantageDesc]"

											hbox = {
												name = "martial_skill_commander"
												datacontext = "[ArmyWindow.GetCommanderMartialSkill]"

												icon = {
													name = "skill_icon"
													texture = "gfx/interface/icons/icon_commander_advantage.dds"
													size = { 30 30 }
												}

												text_single = {
													name = "skill_value"
													align = right|nobaseline
													default_format = "#high"
													text = "[Character.GetCommanderAdvantage]"
												}

												background = {
													name = "skill_icon_bg"
													margin_left = 10
													margin_right = 20
													texture = "gfx/interface/character_view/character_view_skills_bg.dds"
													framesize = { 70 26 }
													frame = "[SkillItem.GetFrame]"
												}
											}
										}

										expand = {}
									}
								}
								expand = {}
							}

							widget = {
								layoutpolicy_horizontal = expanding
								minimumsize = { 150 50 }
								allow_outside = yes

								text_label_center = {
									name = "Commander"
									layoutpolicy_horizontal = expanding
									multiline = yes
									max_width = 115
									text = "[commander|E]"
									parentanchor = center
								}

								widget = {
									size = { 45 50 }

									button_replace = {
										name = "change_commander"
										shortcut = "army_change_commander"
										enabled = "[ArmyWindow.CanShowCommanders]"
										onclick = "[ArmyWindow.ShowCommanders]"
										parentanchor = center
										alwaystransparent = no
										tooltip = "[ArmyWindow.GetShowCommandersTooltip]"
									}
								}

								widget = {
									size = { 45 50 }
									parentanchor = right|vcenter
									allow_outside = yes

									coa_realm_small_crown = {
										visible = "[And(Character.IsValid, Character.HasLandedTitles)]"
										parentanchor = bottom|hcenter
										widgetanchor = bottom|hcenter
									}
								}
							}
						}
					}
				}
			}

			### Info ###
			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				minimumsize = { 280 0 }

				background = {
					name = "army_state_background"
					texture = "[Army.GetArmyStatusIcon]"
					margin = { 3 3 }
					using = Mask_Rough_Edges
					fittype = centercrop

					modify_texture = {
						texture = "gfx/interface/tiles/stretch_bottom_fade.dds"
						blend_mode = alphamultiply
						rotate_uv = 90
					}
				}

				vbox = {
					layoutpolicy_vertical = expanding

					spacer = {
						size = { 20 20 }
						visible = "[Or(Or( DataModelHasItems(ArmyWindow.GetHiredTroopItems), Army.HasEventTroops ), LessThanOrEqualTo_int32(GetDataModelSize(ArmyWindow.GetTroopItems), '(int32)8'))]"
					}

					hbox = {
						margin_left = 10
						layoutpolicy_horizontal = expanding
						soldiers_and_quality_big = {
							datacontext = "[Army.GetComposition]"
						}

						expand = {}
					}

					divider_light = {
						layoutpolicy_horizontal = expanding
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						margin_left = 10

						vbox = {
							layoutpolicy_vertical = expanding

							background = {
								using = Background_Area
								margin = { 14 2 }

								modify_texture = {
									name = "mask"
									texture = "gfx/interface/tiles/tile_fade_mask.dds"
									blend_mode = alphamultiply
								}
							}

							spacer = {
								size = { 5 10 }
								visible = "[Not(Or( DataModelHasItems(ArmyWindow.GetHiredTroopItems), Army.HasEventTroops ))]"
							}

							### Hired Troops
							hbox = {
								name = "hired_and_event_troops"
								visible = "[Or( DataModelHasItems(ArmyWindow.GetHiredTroopItems), Army.HasEventTroops )]"
								ignoreinvisible = yes
								layoutpolicy_horizontal = expanding

								widget = {
									visible = "[Army.HasEventTroops]"
									size = { 36 30 }
									allow_outside = yes
									icon = {
										name = "event_troops"
										texture = "gfx/interface/icons/icon_special_troops.dds"
										size = { 36 36 }
										tooltip = "ARMY_VIEW_ARMY_HAS_EVENT_TROOPS"
										using = tooltip_ne
									}
								}

								overlappingitembox = {
									size = { 350 42 }
									name = "hired_troops"
									datamodel = "[ArmyWindow.GetHiredTroopItems]"

									item = {
										container = {
											ignoreinvisible = yes

											container = {
												name = "mercenary_item"
												visible = "[HiredTroopItem.IsMercenaryCompany]"
												datacontext = "[HiredTroopItem.GetMercenaryCompany]"

												coa_title_tiny = {
													name = "mercenary_coa"
													datacontext = "[MercenaryCompany.GetTitle]"
												}
											}

											container = {
												name = "holy_order_item"
												visible = "[HiredTroopItem.IsHolyOrder]"
												datacontext = "[HiredTroopItem.GetHolyOrder]"

												coa_title_tiny = {
													name = "holy_order_coa"
													datacontext = "[HolyOrder.GetTitle]"
												}
											}
										}
									}
								}

								expand = {}
							}

							spacer = {
								size = { 5 5 }
								visible = "[Or( DataModelHasItems(ArmyWindow.GetHiredTroopItems), Army.HasEventTroops )]"
							}

							### MAA ###
							vbox = {
								layoutpolicy_horizontal = expanding

								hbox = {
									layoutpolicy_horizontal = expanding

									dynamicgridbox = {
										name = "troops"
										datamodel = "[ArmyWindow.GetTroopItems]"
										datamodel_wrap = 4
										flipdirection = yes

										item = {
											widget = {
												tooltip = "ARMY_VIEW_TROOP_TT"

												hbox = {
													set_parent_size_to_minimum = yes
													margin_right = 8
													spacing = 1

													icon = {
														name = "men_at_arms_icon"
														visible = "[TroopItem.IsMaa]"
														size = { 35 35 }
														texture = "[TroopItem.GetRegiment.GetRegiment.GetMAAType.GetIcon]"
													}

													icon = {
														name = "levies_icon"
														visible = "[TroopItem.IsLevies]"
														size = { 35 35 }
														texture = "gfx/interface/icons/icon_soldier.dds"
													}

													widget = {
														visible = "[TroopItem.IsKnight]"
														size = { 30 35 }

														icon = {
															name = "knight_icon"
															parentanchor = center
															size = { 35 35 }
															texture = "gfx/interface/icons/knight_icon_small.dds"
														}
													}

													text_single = {
														layoutpolicy_horizontal = growing
														text = "[TroopItem.GetCount|*]"
													}
												}
											}
										}
									}

									expand = {}
								}

							}

							expand = {}

						}

						expand = {}

					}
				}

				expand = {}
			}
		}
	}

	widget = {
		size = { 770 345 }
		name = "hundred"
		parentanchor = bottom|right

		state = {
			name = "army_change"
			alpha = 0.5
			duration = 0.2
			next = "b"
			using = Animation_Curve_Default
		}

		state = {
			name = "b"
			alpha = 1
			duration = 0.2
			using = Animation_Curve_Default
		}

		vbox = {
			layoutpolicy_vertical = expanding
			margin_right = 35
			spacing = 5

			expand = {
				layoutpolicy_horizontal = expanding
			}

			hbox = {
				layoutpolicy_horizontal = expanding

				expand = {
					layoutpolicy_horizontal = expanding
				}

				hbox = {
					margin = { 30 10 }
					background = {
						using = Background_Area
					}

					text_single = {
						name = "status_text"
						text = "[ArmyWindow.GetUnitItem.GetStatusDescription]"
						default_format = "#high"
					}

					container = {
						name = "open_raid_button"
						visible = "[Army.IsTakingRaidAction]"
						datacontext = "[Army.GetRaid]"
						using = raid_goto_template
						blockoverride "raid_button" {							
							shortcut = "army_to_siege"
						}
					}

					vbox = {
						name = "open_siege_button"
						visible = "[Army.IsSieging]"
						datacontext = "[Army.GetLocation.GetSiege]"
						using = siege_goto_template
						blockoverride "siege_button" {							
							shortcut = "army_to_siege"
						}
					}
				}
			}

			### Manage buttons
			hbox = {
				layoutpolicy_horizontal = expanding
				margin = { 10 0 }
				margin_bottom = 5

				expand = {}

				hbox = {
					layoutpolicy_vertical = expanding
					visible = "[Army.IsRaidArmy]"

					button_checkbox = {
						name = "toggle_looting"
						shortcut = "army_toggle_auto_raiding"
						size = { 30 30 }
						onclick = "[ArmyWindow.ToggleLooting]"
						tooltip = "TOGGLE_LOOTER_STANCE"
						checked = "[Army.HasLooterStance]"
					}

					spacer = {
						size = { 5 5 }
					}

					text_single = {
						text = "AV_ALWAYS_RAID"
					}

					spacer = {
						size = { 5 5 }
					}

					divider_light = {
						layoutpolicy_vertical = expanding
					}

					spacer = {
						size = { 5 5 }
					}
				}

				button_round = {
					name = "unit_custom_split_button"
					enabled = "[ArmyWindow.CanSplitCustomSelected]"

					button_army_create = {
						parentanchor = center
						tooltip = "[ArmyWindow.BuildSplitCustomTooltip]"
						onclick = "[ArmyWindow.ToggleSplitArmyWindow]"
						shortcut = army_create_new
					}
				}

				button_round = {
					name = "split_in_half_button"

					button_army_split_in_half = {
						parentanchor = center
						onclick = [ArmyWindow.SplitHalfSelected]
						shortcut = army_split_half
						tooltip = [ArmyWindow.BuildSplitHalfTooltip]
					}
					enabled = [ArmyWindow.CanSplitHalfSelected]
				}

				button_round = {
					name = "split_off_button"
					shortcut = "army_split_hired"
					onclick = "[ArmyWindow.SplitSelectedHiredAndEventTroops]"
					tooltip = "[ArmyWindow.BuildSplitHiredAndEventTroopsTooltip]"
					enabled = "[ArmyWindow.CanSplitSelectedHiredAndEventTroops]"

					button_army_split_off_special_troops = {
						parentanchor = center
						alwaystransparent = yes
					}
				}

				button_round = {
					name = "split_for_siege_button"
					visible = "[Army.IsSieging]"
					button_army_split_off_besiegers = {
						parentanchor = center
						onclick = [ArmyWindow.SplitSelectedForSiege]
						shortcut = "army_split_for_siege"
					}
					enabled = [ArmyWindow.CanSplitSelectedForSiege]
					tooltip = [ArmyWindow.BuildSplitForSiegeTooltip]
				}

				spacer = {
					size = { 5 5 }
				}

				divider_light = {
					layoutpolicy_vertical = expanding
				}

				spacer = {
					size = { 5 5 }
				}

				button_round = {
					name = "toggle_raiding"

					button_army_toggle_raiding = {
						shortcut = "army_toggle_auto_raiding"
						onclick = [ArmyWindow.ToggleRaiding]
						visible = "[Not(Army.IsRaidArmy)]"
						parentanchor = center
					}

					button_army_details = {
						shortcut = "army_undo_raiding_mode"
						onclick = "[ArmyWindow.ToggleRaiding]"
						visible = "[Army.IsRaidArmy]"
						parentanchor = center
					}

					enabled = [ArmyWindow.CanToggleRaiding]
					tooltip = [ArmyWindow.BuildToggleRaidingTooltip]
					visible = "[GetPlayer.CanRaid]"
				}

				button_round = {
					name = "disband_button"

					enabled = [ArmyWindow.CanDisband]
					tooltip = [ArmyWindow.BuildDisbandTooltip]

					button_army_disband = {
						parentanchor = center
						onclick = [ArmyWindow.DisbandSelected]
						shortcut = army_disband
					}
				}
			}
		}
	}
}

window = {
	name = "army_reorganization_window"
	size = { 900 700 }
	parentanchor = center
	layer = top

	attachto = {
		widgetid = "army_window"
		stackmode = top
		inherit_data_context = yes
	}

	using = Window_Background
	using = Window_Decoration_Spike

	vbox = {
		using = Window_Margins

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "ARMY_REORGANIZATION"
			}

			blockoverride "button_close"
			{
				onclick = "[ArmyReorgWindow.Hide]"

			}
		}

		hbox = {
			layoutpolicy_horizontal = expanding
			margin = { 0 12 }

			widget = {
				size = { 300 100 }
				vbox = {
					name = "left"
					datacontext = "[ArmyReorgWindow.GetLeftArmyComposition]"
					visible = "[DataModelHasItems( ArmyReorgWindow.GetLeftItems )]"

					vbox = {
						spacing = 5

						text_single = {
							name = "army_name"
							text = "[ArmyComposition.GetName]"
							layoutpolicy_horizontal = expanding
							default_format = "#high"
							using = Font_Size_Medium
							align = left
						}

						soldiers_and_quality_small = {
							margin = { 5 5 }
							layoutpolicy_horizontal = expanding
						}

						text_single = {
							name = "army_maintenance"
							text = "ARMY_REORG_LEFT_MAINTENANCE"
							layoutpolicy_horizontal = expanding
							align = left
						}
					}

					expand = {}
				}
			}

			widget = {
				size = { 300 100 }

				vbox = {
					name = "right"
					datacontext = "[ArmyReorgWindow.GetRightArmyComposition]"
					visible = "[DataModelHasItems( ArmyReorgWindow.GetRightItems )]"

					vbox = {
						spacing = 5

						text_single = {
							name = "army_name"
							text = "[ArmyComposition.GetName]"
							layoutpolicy_horizontal = expanding
							default_format = "#high"
							using = Font_Size_Medium
							align = left
						}

						soldiers_and_quality_small = {
							margin = { 5 5 }
							layoutpolicy_horizontal = expanding
						}

						text_single = {
							name = "army_maintenance"
							text = "ARMY_REORG_RIGHT_MAINTENANCE"
							layoutpolicy_horizontal = expanding
							align = left
						}
					}

					expand = {}
				}
			}
		}

		hbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			spacing = 20

			scrollbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				blockoverride "scrollbox_empty"
				{
					visible = "[IsDataModelEmpty(ArmyReorgWindow.GetLeftItems)]"
					text = "REORG_EMPTY_LIST"
				}

				blockoverride "scrollbox_content"
				{
					vbox = {
						datamodel = "[ArmyReorgWindow.GetLeftItems]"
						layoutpolicy_horizontal = expanding
						spacing = 3

						item = {
							button_standard_list = {
								name = "regiment_item"
								layoutpolicy_horizontal = expanding
								size = { 0 50 }
								onclick = "[RegimentReorgEntry.MoveRegiment]"

								using = reorg_regiment_tooltips

								hbox = {
									margin_right = 5

									hbox_reorg_regiment_entry_core = {
										name = "info"
									}

									button_select_arrow = {
										alwaystransparent = yes
										size = { 20 20 }
									}
								}
							}
						}
					}
				}
			}

			scrollbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				blockoverride "scrollbox_empty"
				{
					visible = "[IsDataModelEmpty(ArmyReorgWindow.GetRightItems)]"
					text = "REORG_EMPTY_LIST"
				}

				blockoverride "scrollbox_content"
				{
					vbox = {
						datamodel = "[ArmyReorgWindow.GetRightItems]"
						layoutpolicy_horizontal = expanding
						spacing = 3

						item = {
							button_standard_list = {
								name = "regiment_item"
								layoutpolicy_horizontal = expanding
								size = { 0 50 }
								onclick = "[RegimentReorgEntry.MoveRegiment]"

								using = reorg_regiment_tooltips
								blockoverride "levies_placement" {
									using = tooltip_es
								}
								blockoverride "maa_placement" {
									using = tooltip_es
								}
								blockoverride "knight_placement" {
									using = tooltip_es
								}
								blockoverride "vassal_placement" {
									using = tooltip_es
								}
								hbox = {
									margin_left = 5
									button_select_arrow = {
										alwaystransparent = yes
										size = { 20 20 }
										mirror = horizontal
									}

									hbox_reorg_regiment_entry_core = {
										name = "info"
									}
								}
							}
						}
					}
				}
			}

		}

		hbox = {
			layoutpolicy_horizontal = expanding
			margin = { 0 15 }

			vbox = {
				name = "left_buttons"
				enabled = "[DataModelHasItems( ArmyReorgWindow.GetLeftItems )]"
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding

				hbox = {
					spacing = 3

					button_standard = {
						name = "select"
						text = "SELECT"
						default_format = "#high"
						onclick = "[ArmyReorgWindow.SelectLeft]"
						tooltip = "SELECT_TOOLTIP"
					}

					button_round = {
						name = "disband_button"
						size = { 38 38 }

						enabled = "[ArmyReorgWindow.CanDisband]"
						tooltip = "DISBAND_TOOLTIP"

						button_army_disband = {
							parentanchor = center
							onclick = "[ArmyReorgWindow.DisbandLeft]"
						}
					}
				}
			}

			vbox = {
				name = "right_buttons"
				enabled = "[DataModelHasItems( ArmyReorgWindow.GetRightItems )]"
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding

				hbox = {
					spacing = 3

					button_standard = {
						name = "select"
						text = "SELECT"
						default_format = "#high"
						onclick = "[ArmyReorgWindow.SelectRight]"
						tooltip = "SELECT_TOOLTIP"
					}

					button_round = {
						name = "disband_button"
						size = { 38 38 }

						enabled = "[ArmyReorgWindow.CanDisband]"
						tooltip = "DISBAND_TOOLTIP"

						button_army_disband = {
							parentanchor = center
							onclick = "[ArmyReorgWindow.DisbandRight]"
						}
					}
				}
			}
		}
	}
}

######################################################
################ TYPES AND TEMPLATES #################
######################################################
template reorg_regiment_tooltips {
	hbox = {
		datacontext = "[RegimentReorgEntry.GetKnight]"
		visible = "[Character.IsValid]"
		layoutpolicy_horizontal = growing
		block "knight_placement" {
			using = tooltip_ws
		}

		tooltipwidget = {
			container_character_tooltip = {
				blockoverride "interaction_info" {
					text = "REORG_INSTRUCTION"
				}
			}
		}
	}
	hbox = {
		datacontext = "[RegimentReorgEntry.GetRegiment.GetRegiment]"
		visible = "[RegimentReorgEntry.IsMaA]"
		layoutpolicy_horizontal = growing
		block "maa_placement" {
			using = tooltip_ws
		}
		tooltipwidget = {
			using = regiment_container_tooltip

			blockoverride "extra_info" {
				divider_light = {
					layoutpolicy_horizontal = expanding
				}
				text_single = {
					layoutpolicy_horizontal = expanding
					text = "REORG_INSTRUCTION"
					margin = { 10 0 }
				}
			}
		}
	}
	hbox = {
		datacontext = "[RegimentReorgEntry.GetRegiment.GetRegiment]"
		visible = "[And( Not( Or( RegimentReorgEntry.IsMaA, RegimentReorgEntry.GetKnight.IsValid ) ), RegimentReorgEntry.GetRegiment.GetFromVassal.IsValid )]"
		layoutpolicy_horizontal = growing
		block "vassal_placement" {
			using = tooltip_ws
		}
		tooltip = TT_REORG_VASSAL_LEVIES
	}
	hbox = {
		datacontext = "[RegimentReorgEntry.GetRegiment.GetRegiment]"
		visible = "[And( Not( Or( RegimentReorgEntry.IsMaA, RegimentReorgEntry.GetKnight.IsValid ) ), Not( RegimentReorgEntry.GetRegiment.GetFromVassal.IsValid ) )]"
		layoutpolicy_horizontal = growing
		block "levies_placement" {
			using = tooltip_ws
		}
		tooltip = TT_REORG_LEVIES
	}
}
types ArmyWindow
{
	type multi_unit_button = button {
		gfxtype = updownframedbuttongfx
		framesize = { 50 50 }
		onclick = "[SelectedUnitItem.OnClick]"
		onrightclick = "[SelectedUnitItem.OnRightClick]"
		button_ignore = none
		down = "[SelectedUnitItem.IsShown]"
		effectname = "NoHighlight"

		upframe = 1
		overframe = 2
		downframe = 3
	}

	type army_quality_icon = icon {
		name = "quality_icon"
		texture = "gfx/interface/icons/army_quality_icon.dds"
		framesize = { 32 32 }
		size = { 22 22 }
		frame = "[ArmyComposition.CalcQualityLevel]"
		tooltip = "[ArmyComposition.GetArmyQualityName|T]"
	}

	type unraised_army_quality_icon = icon {
		name = "quality_icon"
		texture = "gfx/interface/icons/army_quality_icon.dds"
		framesize = { 32 32 }
		size = { 22 22 }
		frame = "[ArmyComposition.CalcUnraisedQualityLevel]"
		tooltip = "[ArmyComposition.GetUnraisedArmyQualityName|T]"
	}

	type soldiers_and_quality_big = hbox {
		margin = { 0 2 }
		margin_right = 20
		spacing = 5

		vbox = {
			spacing = 2
			layoutpolicy_vertical = expanding

			expand = {}

			hbox = {
				name = "soldiers"
				layoutpolicy_horizontal = expanding
				spacing = 5

				icon = {
					name = "icon_soldier"
					texture = "gfx/interface/icons/icon_soldier.dds"
					size = { 40 40 }
				}

				text_single = {
					name = "strength"
					text = "[ArmyComposition.GetSoldierCountString]"
					using = Font_Size_Big
					default_format = "#high"
				}

				spacer = {
					size = { 5 5 }
				}

				vbox = {
					layoutpolicy_vertical = expanding
					margin_bottom = 7
					expand = {}

					text_single = {
						name = "quality_label"
						text = "[ArmyComposition.GetArmyQualityName]"
						tooltip = "[ArmyComposition.GetArmyCompositionTooltip]"
					}
				}

				expand = {}
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				spacing = 5

				progressbar_standard = {
					name = "soldiers_max"
					size = { 240 10 }
					visible = "[NotEqualTo_int32(ArmyComposition.GetCurrentNumberOfSoldiers, ArmyComposition.GetMaxNumberOfSoldiers)]"
					min = 0
					max = "[IntToFloat(ArmyComposition.GetMaxNumberOfSoldiers)]"
					value = "[IntToFloat(ArmyComposition.GetCurrentNumberOfSoldiers)]"
				}

				expand = {}
			}

			spacer = {
				visible = "[NotEqualTo_int32(ArmyComposition.GetCurrentNumberOfSoldiers, ArmyComposition.GetMaxNumberOfSoldiers)]"
			}
		}
	}

	type soldiers_and_quality_small = flowcontainer
	{
		margin = {4 4}
		tooltip = "[ArmyComposition.GetArmyCompositionTooltip]"

		background = {
			using = Background_Area_Dark
			margin = { 3 0 }
		}

		icon = {
			name = "icon_soldier"
			parentanchor = vcenter
			texture = "gfx/interface/icons/icon_soldier.dds"
			size = { 30 30 }
		}

		flowcontainer = {
			parentanchor = vcenter
			direction = vertical

			text_single = {
				name = "strength"
				parentanchor = right
				text = "[ArmyComposition.GetSoldierCountString]"
				default_format = "#high"
				using = Font_Size_Medium
			}

			progressbar_standard = {
				name = "soldiers_max"
				size = { 50 8 }
				visible = "[And( NotEqualTo_int32(ArmyComposition.GetCurrentNumberOfSoldiers, ArmyComposition.GetMaxNumberOfSoldiers), NotEqualTo_int32(ArmyComposition.GetMaxNumberOfSoldiers, '(int32)0' ) )]"

				min = 0
				max = "[IntToFloat(ArmyComposition.GetMaxNumberOfSoldiers)]"
				value = "[IntToFloat(ArmyComposition.GetCurrentNumberOfSoldiers)]"
			}
		}

		spacer = {
			size = { 3 10 }
		}

		army_quality_icon = {
			parentanchor = vcenter
			tooltip_enabled = no
		}
	}

	type hbox_reorg_regiment_entry_core = hbox
	{
		datacontext = "[RegimentReorgEntry.GetKnight]"
		datacontext = "[RegimentReorgEntry.GetRegiment]"

		layoutpolicy_vertical = expanding
		layoutpolicy_horizontal = expanding
		margin = { 5 0 }
		spacing = 5

		hbox = {
			name = "icon"

			highlight_icon = {
				name = "men_at_arms_icon"
				datacontext = "[RegimentReorgEntry.GetMaAType]"
				visible = "[RegimentReorgEntry.IsMaA]"
				size = { 35 35 }
				texture = "[RegimentType.GetIcon]"
			}

			highlight_icon = {
				name = "levies_icon"
				visible = "[Not( Or( RegimentReorgEntry.IsMaA, Character.IsValid ) )]"
				size = { 35 35 }
				texture = "gfx/interface/icons/icon_soldier.dds"
			}

			highlight_icon = {
				name = "knight_icon"
				visible = "[Character.IsValid]"
				size = { 35 35 }
				texture = "gfx/interface/icons/knight_icon_small.dds"
			}
		}

		text_single = {
			name = "name"
			layoutpolicy_horizontal = expanding
			text = "[RegimentReorgEntry.GetName]"
		}

		coa_realm_tiny = {
			name = "hired_coa"
			visible = "[RegimentReorgEntry.ShowCoA]"
			datacontext = "[RegimentReorgEntry.GetCoATitle.GetHolder]"
		}


		icon = {
			name = "event_troops"
			visible = "[ArmyRegiment.IsEventTroops]"
			texture = "gfx/interface/icons/icon_special_troops.dds"
			size = { 36 36 }
			tooltip = "TT_REORG_EVENT_TROOPS"
		}

		text_single = {
			name = "prowess"
			visible = "[Character.IsValid]"
			text = "[prowess_i][Character.GetSkill( 'prowess' )]"
			default_format = "#high"
		}

		vbox = {
			name = "soldiers"
			visible = "[Not( Character.IsValid )]"
			tooltip = "TT_REORG_SOLDIERS"

			text_single = {
				name = "soldiers"
				text = "[RegimentReorgEntry.GetSoldierCount]"
				default_format = "#high"
			}

			progressbar_standard = {
				name = "soldiers_max"
				# visible = "[NotEqualTo_int32(RegimentReorgEntry.GetMaxSoldierCount, RegimentReorgEntry.GetSoldierCount)]"
				size = { 50 10 }
				min = 0
				max = "[IntToFloat(RegimentReorgEntry.GetMaxSoldierCount)]"
				value = "[IntToFloat(RegimentReorgEntry.GetSoldierCount)]"
			}
		}
	}
}